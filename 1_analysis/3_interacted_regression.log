
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        https://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Stata license: 745-user network, expiring 30 Jun 2022
Serial number: 501709313533
  Licensed to: Ruixue Li
               UChicago BFI

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. Maximum number of variables is set to 5,000; see help set_maxvar.

. do 3_interacted_regression.do 

. /*
> Purpose: 
>         1. Estimate and Plot stacked income x climate energy-temperature resp
> onse for main spec and robustness models
>         2. Plot change in energy temp response per year for Temporal Trend Mo
> del
> */
. 
. clear all

. set more off

. macro drop _all

. /////////////// SET UP USER SPECIFIC PATHS //////////////////////////////////
> ////////////////////
> 
. global REPO: env REPO

. global DATA: env DATA 

. global OUTPUT: env OUTPUT 

. global LOG: env LOG

. log using $LOG/1_analysis/3_interacted_regression.log, replace
(note: file /Users/ruixueli/Downloads/energy_data_release/LOG/1_analysis/3_inte
> racted_regression.log not found)
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/ruixueli/Downloads/energy_data_release/LOG/1_analysis/3_int
> eracted_regression.log
  log type:  text
 opened on:   7 Sep 2021, 05:08:34

. 
. * path to energy-code-release repo:
. 
. global root "${REPO}/energy-code-release-2020"

. 
. /////////////////////////////////////////////////////////////////////////////
> ////////////////////
> 
. ******Set Script Toggles*****************************************************
> ***
. 
. // What model do you want?
. global model "TINV_clim"

. 
. *****************************************************************************
> ***
. * Step 1: Estimate Energy Temperature Response
. *****************************************************************************
> ***
.  
. foreach submodel in "" "EX" "lininter" "quadinter"  {
  2. 
.         global submodel "`submodel'"
  3.         do $root/1_analysis/interacted_regression/stacked.do
  4. } 

. /*
> 
> Purpose: Run a stacked interacted regression. 
> In other words, generate energy-temperature response sters for fully interact
> ed model.
> 
> */
. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model "$model"

. local submodel "$submodel"

. 
. // create local for naming ster file
. 
. if "`submodel'" != "" local model_name = "`model'_`submodel'"

. else local model_name = "`model'"

. 
. *****************************************************************************
> ***
. * Step 1: Load Data
. *****************************************************************************
> ***
. 
. if (strpos("`model_name'", "EX") == 0) {
.         use "$DATA/regression/GMFD_`model'_regsort.dta", clear
. }

. else {
.         use "$DATA/regression/GMFD_`model_name'_regsort.dta", clear
. }

. 
. *****************************************************************************
> ***
. * Step 2: Prepare Regressors and Run Regression
. *****************************************************************************
> ***
. 
. // set time
. sort region_i year 

. tset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
. * long run income x income group
. 
. local lgdppc_MA15_r = ""

. 
. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 local lgdppc_MA15_r = "`lgdppc_MA15_r' c.indp`pg'#c.indf1#
> c.FD_I`lg'lgdppc_MA15"
  4.         }               
  5. }

. 
. * large income group dummies
. 
. forval pg=1/2 {
  2.         forval lg=1/2 {
  3.                 gen DumIncG`lg'F1P`pg' = FD_largeind`lg'*indf1*indp`pg'
  4.         }
  5. }
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)

. 
. 
. * precip
. 
. local precip_r = ""

. 
. forval pg=1/2 {
  2.         forval k = 1/2 {
  3.                 local precip_r = "`precip_r' c.indp`pg'#c.indf1#c.FD_preci
> p`k'_GMFD"
  4.         }               
  5. }

. 
. * temp
. 
. local temp_r = ""

. 
. forval pg=1/2 {
  2.         forval k=1/2 {
  3.                 local temp_r = "`temp_r' c.indp`pg'#c.indf1#c.FD_temp`k'_G
> MFD"
  4.         }
  5. }

. 
. * temp x long run climate
. 
. local climate_r = ""

. forval pg = 1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local climate_r = "`climate_r' c.indp`pg'#c.indf1#
> c.FD_hdd20_TINVtemp`k'_GMFD c.indp`pg'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD"
  5.                 }
  6.         }               
  7. }

. 
. * temp x income spline
. 
. local income_spline_r = ""

. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local income_spline_r = "`income_spline_r' c.indp`
> pg'#c.indf1#c.FD_dc1_lgdppc_MA15I`lg'temp`k'"
  5.                 }
  6.         }               
  7. }

. 
. if ("`submodel'" == "lininter" | "`submodel'" == "quadinter" ) {
.         
.         * temp x year
. 
.         local year_temp_r = ""
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_yeartemp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year x income spline
. 
.         local year_income_spline_r = ""
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. 
. 
. if ("`submodel'" == "quadinter") {
.         
.         * temp x year^2
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_year2temp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year^2 x income spline
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. //run first stage regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc*, absorb(i.flow_i#i.product_i#i.year#i.subregionid) cluster(region_i) 
> residuals(resid)
(dropped 106 singleton observations)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,614
Absorbing 1 HDFE group                            F(  30,    500) =       3.90
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.1275
                                                  Adj R-squared   =     0.0152
                                                  Within R-sq.    =     0.0123
Number of clusters (region_i) =        501        Root MSE        =     3.7636

                             (Std. Err. adjusted for 501 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0008113   .0003675     2.21   0.028     .0000892    .0015333
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -.0000264    .000013    -2.04   0.042    -.0000519   -9.60e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0001456   .0034964    -0.04   0.967    -.0070149    .0067238
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0000333     .00008     0.42   0.677    -.0001238    .0001904
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000661    .000059     1.12   0.263    -.0000498     .000182
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -5.23e-07   3.12e-07    -1.67   0.095    -1.14e-06    9.06e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000406   .0005121     0.08   0.937    -.0009656    .0010468
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |  -2.46e-06   3.00e-06    -0.82   0.413    -8.36e-06    3.43e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.88e-07   8.63e-08     2.18   0.030     1.88e-08    3.58e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   2.63e-06   2.23e-06     1.18   0.239    -1.75e-06    7.01e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   1.11e-09   2.83e-09     0.39   0.696    -4.46e-09    6.68e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.89e-08   3.42e-08    -1.14   0.255    -1.06e-07    2.82e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   3.05e-07   6.40e-07     0.48   0.634    -9.53e-07    1.56e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   9.78e-06   .0000129     0.76   0.448    -.0000155    .0000351
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   3.87e-09   9.34e-09     0.41   0.679    -1.45e-08    2.22e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.72e-07   2.31e-07    -0.74   0.459    -6.26e-07    2.83e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -.4665365   .8257383    -0.56   0.572    -2.088881    1.155808
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   6.612392   1.718287     3.85   0.000      3.23644    9.988345
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   3.456936   6.057704     0.57   0.568    -8.444755    15.35863
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   17.07799   3.937646     4.34   0.000     9.341618    24.81436
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0000324   .0001722     0.19   0.851    -.0003059    .0003708
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   3.00e-06   5.52e-06     0.54   0.586    -7.84e-06    .0000138
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0011272    .000505    -2.23   0.026    -.0021194   -.0001351
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0000373   .0000151     2.48   0.014     7.70e-06    .0000669
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   -.002619   .0015834    -1.65   0.099      -.00573     .000492
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0000904   .0000492     1.84   0.067    -6.25e-06    .0001871
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0003274   .0011165    -0.29   0.769    -.0025209    .0018662
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0000489   .0000418    -1.17   0.242    -.0001311    .0000332
             |
DumIncG1F1P1 |   64.18528   18.06748     3.55   0.000     28.68773    99.68282
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   104.8327   55.69236     1.88   0.060    -4.587227    214.2525
DumIncG2F1P2 |          0  (omitted)
       _cons |  -.0084885   .0738719    -0.11   0.909    -.1536261    .1366491
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_inter_`model_name'", replace   
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_inter_TINV_
> clim.ster saved

. 
. //calculating weigts for FGLS
. drop if resid==.
(687 observations deleted)

. bysort region_i: egen omega = var(resid)
(51 missing values generated)

. qui gen weight = 1/omega

. drop resid //included

. 
. //run second stage FGLS regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc* [pw = weight], absorb(i.flow_i#i.product_i#i.year#i.subregionid) clus
> ter(region_i)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,563
Absorbing 1 HDFE group                            F(  30,    449) =       4.61
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.5199
                                                  Adj R-squared   =     0.4577
                                                  Within R-sq.    =     0.0693
Number of clusters (region_i) =        450        Root MSE        =     0.1646

                             (Std. Err. adjusted for 450 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0001291   .0001494     0.86   0.388    -.0001645    .0004228
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -6.94e-06   3.64e-06    -1.90   0.057    -.0000141    2.22e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0007158   .0008454     0.85   0.398    -.0009457    .0023773
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -2.49e-07   .0000214    -0.01   0.991    -.0000423    .0000418
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   3.80e-06   .0000127     0.30   0.764    -.0000211    .0000287
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -4.29e-08   5.83e-08    -0.74   0.462    -1.57e-07    7.16e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |  -.0000804    .000054    -1.49   0.137    -.0001866    .0000257
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |   1.78e-07   3.69e-07     0.48   0.629    -5.46e-07    9.03e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |  -6.19e-09   2.77e-08    -0.22   0.823    -6.07e-08    4.83e-08
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   3.36e-07   1.43e-07     2.35   0.019     5.56e-08    6.17e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   4.73e-10   8.36e-10     0.57   0.572    -1.17e-09    2.12e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.89e-09   2.36e-09    -1.65   0.100    -8.52e-09    7.42e-10
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.54e-07   1.66e-07     0.93   0.354    -1.72e-07    4.80e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   5.84e-07   5.97e-07     0.98   0.328    -5.89e-07    1.76e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   1.02e-08   4.94e-09     2.05   0.040     4.43e-10    1.99e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.48e-08   1.11e-08    -1.34   0.181    -3.66e-08    6.91e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   .2138458   .3823827     0.56   0.576    -.5376362    .9653278
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |    5.13882   1.156105     4.44   0.000     2.866772    7.410868
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -2.229688   3.291853    -0.68   0.499     -8.69904    4.239664
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   7.419508   1.768533     4.20   0.000     3.943878    10.89514
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0000754   .0000733     1.03   0.304    -.0000686    .0002194
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |  -1.12e-06   1.61e-06    -0.70   0.487    -4.27e-06    2.04e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0006769   .0002559    -2.64   0.008    -.0011798   -.0001739
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0000279   6.74e-06     4.14   0.000     .0000147    .0000412
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0004982   .0007611     0.65   0.513    -.0009975    .0019939
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |  -9.40e-06   .0000169    -0.56   0.579    -.0000426    .0000239
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |   -.001111   .0003709    -3.00   0.003    -.0018399    -.000382
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0000122   9.41e-06     1.30   0.195    -6.28e-06    .0000307
             |
DumIncG1F1P1 |   44.69365   11.68242     3.83   0.000     21.73464    67.65266
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   74.24042   32.91992     2.26   0.025     9.544173    138.9367
DumIncG2F1P2 |          0  (omitted)
       _cons |   .0254575   .0065137     3.91   0.000     .0126563    .0382586
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_FGLS_inter_`model_name'", replace
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_FGLS_inter_
> TINV_clim.ster saved

. 
. 
. 
. 
end of do-file

. /*
> 
> Purpose: Run a stacked interacted regression. 
> In other words, generate energy-temperature response sters for fully interact
> ed model.
> 
> */
. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model "$model"

. local submodel "$submodel"

. 
. // create local for naming ster file
. 
. if "`submodel'" != "" local model_name = "`model'_`submodel'"

. else local model_name = "`model'"

. 
. *****************************************************************************
> ***
. * Step 1: Load Data
. *****************************************************************************
> ***
. 
. if (strpos("`model_name'", "EX") == 0) {
.         use "$DATA/regression/GMFD_`model'_regsort.dta", clear
. }

. else {
.         use "$DATA/regression/GMFD_`model_name'_regsort.dta", clear
. }

. 
. *****************************************************************************
> ***
. * Step 2: Prepare Regressors and Run Regression
. *****************************************************************************
> ***
. 
. // set time
. sort region_i year 

. tset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
. * long run income x income group
. 
. local lgdppc_MA15_r = ""

. 
. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 local lgdppc_MA15_r = "`lgdppc_MA15_r' c.indp`pg'#c.indf1#
> c.FD_I`lg'lgdppc_MA15"
  4.         }               
  5. }

. 
. * large income group dummies
. 
. forval pg=1/2 {
  2.         forval lg=1/2 {
  3.                 gen DumIncG`lg'F1P`pg' = FD_largeind`lg'*indf1*indp`pg'
  4.         }
  5. }
(524 missing values generated)
(524 missing values generated)
(524 missing values generated)
(524 missing values generated)

. 
. 
. * precip
. 
. local precip_r = ""

. 
. forval pg=1/2 {
  2.         forval k = 1/2 {
  3.                 local precip_r = "`precip_r' c.indp`pg'#c.indf1#c.FD_preci
> p`k'_GMFD"
  4.         }               
  5. }

. 
. * temp
. 
. local temp_r = ""

. 
. forval pg=1/2 {
  2.         forval k=1/2 {
  3.                 local temp_r = "`temp_r' c.indp`pg'#c.indf1#c.FD_temp`k'_G
> MFD"
  4.         }
  5. }

. 
. * temp x long run climate
. 
. local climate_r = ""

. forval pg = 1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local climate_r = "`climate_r' c.indp`pg'#c.indf1#
> c.FD_hdd20_TINVtemp`k'_GMFD c.indp`pg'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD"
  5.                 }
  6.         }               
  7. }

. 
. * temp x income spline
. 
. local income_spline_r = ""

. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local income_spline_r = "`income_spline_r' c.indp`
> pg'#c.indf1#c.FD_dc1_lgdppc_MA15I`lg'temp`k'"
  5.                 }
  6.         }               
  7. }

. 
. if ("`submodel'" == "lininter" | "`submodel'" == "quadinter" ) {
.         
.         * temp x year
. 
.         local year_temp_r = ""
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_yeartemp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year x income spline
. 
.         local year_income_spline_r = ""
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. 
. 
. if ("`submodel'" == "quadinter") {
.         
.         * temp x year^2
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_year2temp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year^2 x income spline
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. //run first stage regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc*, absorb(i.flow_i#i.product_i#i.year#i.subregionid) cluster(region_i) 
> residuals(resid)
(dropped 93 singleton observations)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,074
Absorbing 1 HDFE group                            F(  30,    449) =       3.67
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.1329
                                                  Adj R-squared   =     0.0117
                                                  Within R-sq.    =     0.0127
Number of clusters (region_i) =        450        Root MSE        =     3.8781

                             (Std. Err. adjusted for 450 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0007799    .000395     1.97   0.049     3.72e-06    .0015562
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -.0000275   .0000135    -2.04   0.042     -.000054   -1.03e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0009415    .003712    -0.25   0.800    -.0082366    .0063535
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0000551   .0000884     0.62   0.534    -.0001187    .0002288
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000612   .0000617     0.99   0.322    -.0000601    .0001825
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -4.69e-07   3.11e-07    -1.51   0.132    -1.08e-06    1.42e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   .0001056   .0005847     0.18   0.857    -.0010435    .0012547
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |  -2.76e-06   3.31e-06    -0.83   0.405    -9.26e-06    3.74e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.80e-07   9.07e-08     1.99   0.048     1.83e-09    3.58e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   2.70e-06   2.29e-06     1.18   0.239    -1.80e-06    7.20e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   6.73e-10   2.92e-09     0.23   0.818    -5.06e-09    6.41e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.92e-08   3.52e-08    -1.12   0.265    -1.08e-07    2.99e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.25e-07   6.54e-07     0.19   0.848    -1.16e-06    1.41e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   .0000114   .0000139     0.82   0.411    -.0000159    .0000388
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   6.53e-09   1.00e-08     0.65   0.515    -1.32e-08    2.62e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -2.04e-07   2.50e-07    -0.82   0.415    -6.96e-07    2.88e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -.3237096   .8773235    -0.37   0.712     -2.04788    1.400461
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   7.038267   1.807409     3.89   0.000     3.486235     10.5903
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   .5053246   7.802996     0.06   0.948     -14.8296    15.84025
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   18.53403   4.185833     4.43   0.000     10.30777    26.76028
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.0000185   .0001797    -0.10   0.918    -.0003716    .0003347
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   4.27e-06   5.70e-06     0.75   0.454    -6.93e-06    .0000155
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |   -.001163   .0005379    -2.16   0.031    -.0022202   -.0001059
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |    .000037   .0000158     2.33   0.020     5.85e-06    .0000681
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.0024018   .0018084    -1.33   0.185    -.0059558    .0011521
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0000951   .0000563     1.69   0.092    -.0000156    .0002058
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0006841   .0011144    -0.61   0.540    -.0028741    .0015059
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0000442   .0000438    -1.01   0.314    -.0001302    .0000419
             |
DumIncG1F1P1 |   66.74082   19.12359     3.49   0.001     29.15797    104.3237
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   138.8911   67.29899     2.06   0.040     6.630943    271.1512
DumIncG2F1P2 |          0  (omitted)
       _cons |    .001126   .0785367     0.01   0.989    -.1532192    .1554712
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_inter_`model_name'", replace   
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_inter_TINV_
> clim_EX.ster saved

. 
. //calculating weigts for FGLS
. drop if resid==.
(617 observations deleted)

. bysort region_i: egen omega = var(resid)
(43 missing values generated)

. qui gen weight = 1/omega

. drop resid //included

. 
. //run second stage FGLS regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc* [pw = weight], absorb(i.flow_i#i.product_i#i.year#i.subregionid) clus
> ter(region_i)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,031
Absorbing 1 HDFE group                            F(  30,    406) =       4.59
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.6760
                                                  Adj R-squared   =     0.6304
                                                  Within R-sq.    =     0.0731
Number of clusters (region_i) =        407        Root MSE        =     0.1675

                             (Std. Err. adjusted for 407 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0000724   .0001486     0.49   0.626    -.0002197    .0003645
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -6.31e-06   3.65e-06    -1.73   0.085    -.0000135    8.71e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .0008744   .0008911     0.98   0.327    -.0008773    .0026261
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -2.10e-06   .0000236    -0.09   0.929    -.0000485    .0000443
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   3.53e-06   .0000137     0.26   0.796    -.0000233    .0000304
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -4.27e-08   5.98e-08    -0.71   0.475    -1.60e-07    7.48e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   -.000057    .000061    -0.94   0.350    -.0001769    .0000628
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |   1.05e-07   4.12e-07     0.26   0.799    -7.06e-07    9.16e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |  -1.58e-08   2.77e-08    -0.57   0.570    -7.02e-08    3.87e-08
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   3.41e-07   1.54e-07     2.22   0.027     3.93e-08    6.44e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   1.60e-10   8.61e-10     0.19   0.853    -1.53e-09    1.85e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.74e-09   2.56e-09    -1.46   0.145    -8.77e-09    1.29e-09
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   9.11e-08   1.66e-07     0.55   0.584    -2.36e-07    4.18e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   4.62e-07   6.92e-07     0.67   0.505    -8.99e-07    1.82e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   9.64e-09   5.10e-09     1.89   0.059    -3.78e-10    1.97e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.44e-08   1.32e-08    -1.09   0.278    -4.04e-08    1.16e-08
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   .4522035   .3928317     1.15   0.250    -.3200346    1.224442
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   5.389377   1.223342     4.41   0.000     2.984501    7.794252
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -5.373688   3.497458    -1.54   0.125    -12.24907    1.501699
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   9.202051    1.70852     5.39   0.000     5.843401     12.5607
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0000435   .0000735     0.59   0.554    -.0001009    .0001879
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |  -3.50e-07   1.63e-06    -0.22   0.830    -3.55e-06    2.85e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0007069   .0002691    -2.63   0.009    -.0012359   -.0001779
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0000275   7.01e-06     3.92   0.000     .0000137    .0000413
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0011487   .0008627     1.33   0.184    -.0005472    .0028447
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   -.000024   .0000207    -1.16   0.246    -.0000646    .0000166
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0016454   .0003458    -4.76   0.000    -.0023253   -.0009655
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0000273   8.96e-06     3.04   0.002     9.65e-06    .0000449
             |
DumIncG1F1P1 |   44.80039   12.28785     3.65   0.000     20.64465    68.95613
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   112.8415   34.08552     3.31   0.001     45.83539    179.8477
DumIncG2F1P2 |          0  (omitted)
       _cons |   .0236223   .0081368     2.90   0.004     .0076267    .0396178
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_FGLS_inter_`model_name'", replace
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_FGLS_inter_
> TINV_clim_EX.ster saved

. 
. 
. 
. 
end of do-file

. /*
> 
> Purpose: Run a stacked interacted regression. 
> In other words, generate energy-temperature response sters for fully interact
> ed model.
> 
> */
. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model "$model"

. local submodel "$submodel"

. 
. // create local for naming ster file
. 
. if "`submodel'" != "" local model_name = "`model'_`submodel'"

. else local model_name = "`model'"

. 
. *****************************************************************************
> ***
. * Step 1: Load Data
. *****************************************************************************
> ***
. 
. if (strpos("`model_name'", "EX") == 0) {
.         use "$DATA/regression/GMFD_`model'_regsort.dta", clear
. }

. else {
.         use "$DATA/regression/GMFD_`model_name'_regsort.dta", clear
. }

. 
. *****************************************************************************
> ***
. * Step 2: Prepare Regressors and Run Regression
. *****************************************************************************
> ***
. 
. // set time
. sort region_i year 

. tset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
. * long run income x income group
. 
. local lgdppc_MA15_r = ""

. 
. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 local lgdppc_MA15_r = "`lgdppc_MA15_r' c.indp`pg'#c.indf1#
> c.FD_I`lg'lgdppc_MA15"
  4.         }               
  5. }

. 
. * large income group dummies
. 
. forval pg=1/2 {
  2.         forval lg=1/2 {
  3.                 gen DumIncG`lg'F1P`pg' = FD_largeind`lg'*indf1*indp`pg'
  4.         }
  5. }
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)

. 
. 
. * precip
. 
. local precip_r = ""

. 
. forval pg=1/2 {
  2.         forval k = 1/2 {
  3.                 local precip_r = "`precip_r' c.indp`pg'#c.indf1#c.FD_preci
> p`k'_GMFD"
  4.         }               
  5. }

. 
. * temp
. 
. local temp_r = ""

. 
. forval pg=1/2 {
  2.         forval k=1/2 {
  3.                 local temp_r = "`temp_r' c.indp`pg'#c.indf1#c.FD_temp`k'_G
> MFD"
  4.         }
  5. }

. 
. * temp x long run climate
. 
. local climate_r = ""

. forval pg = 1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local climate_r = "`climate_r' c.indp`pg'#c.indf1#
> c.FD_hdd20_TINVtemp`k'_GMFD c.indp`pg'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD"
  5.                 }
  6.         }               
  7. }

. 
. * temp x income spline
. 
. local income_spline_r = ""

. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local income_spline_r = "`income_spline_r' c.indp`
> pg'#c.indf1#c.FD_dc1_lgdppc_MA15I`lg'temp`k'"
  5.                 }
  6.         }               
  7. }

. 
. if ("`submodel'" == "lininter" | "`submodel'" == "quadinter" ) {
.         
.         * temp x year
. 
.         local year_temp_r = ""
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_yeartemp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year x income spline
. 
.         local year_income_spline_r = ""
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. 
. 
. if ("`submodel'" == "quadinter") {
.         
.         * temp x year^2
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_year2temp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year^2 x income spline
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. //run first stage regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc*, absorb(i.flow_i#i.product_i#i.year#i.subregionid) cluster(region_i) 
> residuals(resid)
(dropped 106 singleton observations)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,614
Absorbing 1 HDFE group                            F(  42,    500) =       5.48
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.1289
                                                  Adj R-squared   =     0.0151
                                                  Within R-sq.    =     0.0139
Number of clusters (region_i) =        501        Root MSE        =     3.7638

                             (Std. Err. adjusted for 501 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0211713   .0358174    -0.59   0.555    -.0915425    .0491999
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0009086   .0010724     0.85   0.397    -.0011984    .0030156
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .1162645   .2588681     0.45   0.654    -.3923389    .6248678
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |    -.00286   .0103636    -0.28   0.783    -.0232216    .0175016
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000626   .0000572     1.09   0.274    -.0000498     .000175
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -4.90e-07   3.07e-07    -1.60   0.111    -1.09e-06    1.13e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000138   .0005423     0.03   0.980    -.0010516    .0010792
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |  -2.34e-06   3.08e-06    -0.76   0.447    -8.39e-06    3.71e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.67e-07   8.18e-08     2.04   0.041     6.50e-09    3.28e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   2.78e-06   2.25e-06     1.24   0.217    -1.64e-06    7.19e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   1.24e-09   2.83e-09     0.44   0.662    -4.32e-09    6.80e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -4.13e-08   3.44e-08    -1.20   0.230    -1.09e-07    2.62e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   3.40e-07   6.45e-07     0.53   0.598    -9.28e-07    1.61e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   .0000104   .0000136     0.76   0.447    -.0000164    .0000371
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   3.74e-09   9.73e-09     0.38   0.701    -1.54e-08    2.29e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.82e-07   2.47e-07    -0.74   0.461    -6.66e-07    3.03e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   .1146364   .7502009     0.15   0.879    -1.359298    1.588571
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   7.384732   1.726964     4.28   0.000     3.991732    10.77773
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   3.792067   5.516342     0.69   0.492       -7.046    14.63013
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   17.69062   3.743354     4.73   0.000     10.33598    25.04526
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.0403274   .0176714    -2.28   0.023    -.0750467    -.005608
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |    .001031   .0006655     1.55   0.122    -.0002766    .0023386
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0926684    .049841    -1.86   0.064    -.1905921    .0052553
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0014073   .0018236     0.77   0.441    -.0021757    .0049902
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.1378323   .2656178    -0.52   0.604     -.659697    .3840323
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0046951   .0111609     0.42   0.674     -.017233    .0266232
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -.0250661   .2104087    -0.12   0.905    -.4384603    .3883282
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0005161   .0103614    -0.05   0.960    -.0208734    .0198412
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |    .000011    .000018     0.61   0.541    -.0000244    .0000464
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |  -4.69e-07   5.39e-07    -0.87   0.385    -1.53e-06    5.90e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |  -.0000583   .0001296    -0.45   0.653    -.0003128    .0001962
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |   1.45e-06   5.18e-06     0.28   0.780    -8.74e-06    .0000116
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0000203   8.88e-06     2.29   0.023     2.85e-06    .0000377
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -5.16e-07   3.34e-07    -1.54   0.123    -1.17e-06    1.40e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0000459    .000025     1.84   0.067    -3.19e-06    .0000951
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -6.87e-07   9.16e-07    -0.75   0.453    -2.49e-06    1.11e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |    .000068   .0001332     0.51   0.610    -.0001937    .0003297
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -2.31e-06   5.60e-06    -0.41   0.679    -.0000133    8.68e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0000124   .0001053     0.12   0.906    -.0001944    .0002193
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   2.33e-07   5.19e-06     0.05   0.964    -9.96e-06    .0000104
             |
DumIncG1F1P1 |   65.92262   17.65003     3.73   0.000     31.24525       100.6
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   106.8905   53.45766     2.00   0.046     1.861193    211.9198
DumIncG2F1P2 |          0  (omitted)
       _cons |   .0067489   .1373249     0.05   0.961    -.2630559    .2765538
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_inter_`model_name'", replace   
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_inter_TINV_
> clim_lininter.ster saved

. 
. //calculating weigts for FGLS
. drop if resid==.
(687 observations deleted)

. bysort region_i: egen omega = var(resid)
(51 missing values generated)

. qui gen weight = 1/omega

. drop resid //included

. 
. //run second stage FGLS regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc* [pw = weight], absorb(i.flow_i#i.product_i#i.year#i.subregionid) clus
> ter(region_i)
(MWFE estimator converged in 1 iterations)
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity

HDFE Linear regression                            Number of obs   =      7,563
Absorbing 1 HDFE group                            F(  42,    449) =       5.95
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.8688
                                                  Adj R-squared   =     0.8515
                                                  Within R-sq.    =     0.1283
Number of clusters (region_i) =        450        Root MSE        =     0.0876

                             (Std. Err. adjusted for 450 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0274377   .0173589    -1.58   0.115    -.0615525     .006677
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0009829    .000436     2.25   0.025     .0001261    .0018397
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |   .1035771   .0725862     1.43   0.154    -.0390739     .246228
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -.0020895   .0016552    -1.26   0.207    -.0053424    .0011634
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |  -1.06e-07   .0000134    -0.01   0.994    -.0000263    .0000261
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -6.43e-08   5.85e-08    -1.10   0.272    -1.79e-07    5.06e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   -.000073   .0000547    -1.33   0.183    -.0001804    .0000345
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |   1.10e-07   3.75e-07     0.29   0.770    -6.27e-07    8.46e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   4.16e-08   2.77e-08     1.50   0.134    -1.28e-08    9.61e-08
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   3.72e-07   2.03e-07     1.83   0.067    -2.67e-08    7.71e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |  -4.60e-11   9.17e-10    -0.05   0.960    -1.85e-09    1.76e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.19e-09   3.28e-09    -0.97   0.331    -9.64e-09    3.25e-09
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.95e-07   1.56e-07     1.25   0.214    -1.12e-07    5.02e-07
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   5.24e-07   5.76e-07     0.91   0.363    -6.08e-07    1.66e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   9.68e-09   4.92e-09     1.97   0.050     5.14e-12    1.94e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.26e-08   1.04e-08    -1.21   0.226    -3.30e-08    7.82e-09
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   1.001625   .4002066     2.50   0.013     .2151145    1.788136
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   5.132564   1.105843     4.64   0.000     2.959294    7.305834
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -1.304672   3.229599    -0.40   0.686    -7.651678    5.042335
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   7.606125   1.782489     4.27   0.000     4.103068    11.10918
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.0354481   .0069871    -5.07   0.000    -.0491797   -.0217166
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0009881   .0002372     4.17   0.000     .0005219    .0014544
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |     .04019   .0449719     0.89   0.372    -.0481915    .1285715
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0030345   .0015837    -1.92   0.056    -.0061469    .0000779
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0021016   .0336058     0.06   0.950    -.0639425    .0681457
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0000486   .0012739     0.04   0.970    -.0024549    .0025522
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |   .0144615   .0310299     0.47   0.641    -.0465202    .0754433
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0012789   .0012115    -1.06   0.292    -.0036598     .001102
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |    .000014   8.70e-06     1.60   0.109    -3.14e-06    .0000311
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |  -5.01e-07   2.19e-07    -2.29   0.022    -9.31e-07   -7.15e-08
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |  -.0000516   .0000362    -1.42   0.155    -.0001227    .0000196
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |   1.05e-06   8.26e-07     1.27   0.206    -5.77e-07    2.67e-06
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0000178   3.51e-06     5.09   0.000      .000011    .0000247
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -4.97e-07   1.19e-07    -4.17   0.000    -7.31e-07   -2.63e-07
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -.0000205   .0000226    -0.91   0.364    -.0000649    .0000239
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   1.54e-06   7.95e-07     1.93   0.054    -2.64e-08    3.10e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -8.98e-07   .0000168    -0.05   0.957     -.000034    .0000322
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -2.76e-08   6.39e-07    -0.04   0.966    -1.28e-06    1.23e-06
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -7.74e-06   .0000155    -0.50   0.618    -.0000382    .0000227
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   6.47e-07   6.06e-07     1.07   0.287    -5.45e-07    1.84e-06
             |
DumIncG1F1P1 |   37.49089   11.33995     3.31   0.001     15.20493    59.77686
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   68.53555   32.15538     2.13   0.034     5.341816    131.7293
DumIncG2F1P2 |          0  (omitted)
       _cons |  -.1935701   .0403844    -4.79   0.000    -.2729361   -.1142042
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_FGLS_inter_`model_name'", replace
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_FGLS_inter_
> TINV_clim_lininter.ster saved

. 
. 
. 
. 
end of do-file

. /*
> 
> Purpose: Run a stacked interacted regression. 
> In other words, generate energy-temperature response sters for fully interact
> ed model.
> 
> */
. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model "$model"

. local submodel "$submodel"

. 
. // create local for naming ster file
. 
. if "`submodel'" != "" local model_name = "`model'_`submodel'"

. else local model_name = "`model'"

. 
. *****************************************************************************
> ***
. * Step 1: Load Data
. *****************************************************************************
> ***
. 
. if (strpos("`model_name'", "EX") == 0) {
.         use "$DATA/regression/GMFD_`model'_regsort.dta", clear
. }

. else {
.         use "$DATA/regression/GMFD_`model_name'_regsort.dta", clear
. }

. 
. *****************************************************************************
> ***
. * Step 2: Prepare Regressors and Run Regression
. *****************************************************************************
> ***
. 
. // set time
. sort region_i year 

. tset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
. * long run income x income group
. 
. local lgdppc_MA15_r = ""

. 
. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 local lgdppc_MA15_r = "`lgdppc_MA15_r' c.indp`pg'#c.indf1#
> c.FD_I`lg'lgdppc_MA15"
  4.         }               
  5. }

. 
. * large income group dummies
. 
. forval pg=1/2 {
  2.         forval lg=1/2 {
  3.                 gen DumIncG`lg'F1P`pg' = FD_largeind`lg'*indf1*indp`pg'
  4.         }
  5. }
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)

. 
. 
. * precip
. 
. local precip_r = ""

. 
. forval pg=1/2 {
  2.         forval k = 1/2 {
  3.                 local precip_r = "`precip_r' c.indp`pg'#c.indf1#c.FD_preci
> p`k'_GMFD"
  4.         }               
  5. }

. 
. * temp
. 
. local temp_r = ""

. 
. forval pg=1/2 {
  2.         forval k=1/2 {
  3.                 local temp_r = "`temp_r' c.indp`pg'#c.indf1#c.FD_temp`k'_G
> MFD"
  4.         }
  5. }

. 
. * temp x long run climate
. 
. local climate_r = ""

. forval pg = 1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local climate_r = "`climate_r' c.indp`pg'#c.indf1#
> c.FD_hdd20_TINVtemp`k'_GMFD c.indp`pg'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD"
  5.                 }
  6.         }               
  7. }

. 
. * temp x income spline
. 
. local income_spline_r = ""

. forval pg=1/2 {
  2.         forval lg = 1/2 {
  3.                 forval k = 1/2 {
  4.                         local income_spline_r = "`income_spline_r' c.indp`
> pg'#c.indf1#c.FD_dc1_lgdppc_MA15I`lg'temp`k'"
  5.                 }
  6.         }               
  7. }

. 
. if ("`submodel'" == "lininter" | "`submodel'" == "quadinter" ) {
.         
.         * temp x year
. 
.         local year_temp_r = ""
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_yeartemp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year x income spline
. 
.         local year_income_spline_r = ""
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. 
. 
. if ("`submodel'" == "quadinter") {
.         
.         * temp x year^2
. 
.         forval pg=1/2 {
  2.                 forval k = 1/2 {
  3.                         local year_temp_r = "`year_temp_r' c.indp`pg'#c.in
> df1#c.FD_year2temp`k'_GMFD"
  4.                 }       
  5.         }
.                 
.         * temp x year^2 x income spline
.         
.         forval pg=1/2 {
  2.                 forval lg = 1/2 {
  3.                         forval k = 1/2 {
  4.                                 local year_income_spline_r = "`year_income
> _spline_r' c.indp`pg'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`lg'temp`k'"
  5.                         }
  6.                 }               
  7.         }
. }

. 
. 
. //run first stage regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc*, absorb(i.flow_i#i.product_i#i.year#i.subregionid) cluster(region_i) 
> residuals(resid)
(dropped 106 singleton observations)
(MWFE estimator converged in 1 iterations)
warning: missing F statistic; dropped variables due to collinearity or too few 
> clusters
note: c.indp1#c.indf1#c.FD_yeartemp1_GMFD omitted because of collinearity
note: c.indp1#c.indf1#c.FD_yeartemp2_GMFD omitted because of collinearity
note: c.indp2#c.indf1#c.FD_yeartemp1_GMFD omitted because of collinearity
note: c.indp2#c.indf1#c.FD_yeartemp2_GMFD omitted because of collinearity
note: c.indp1#c.indf1#c.FD_dc1_lgdppc_MA15yearI1temp2 omitted because of collin
> earity
note: c.indp1#c.indf1#c.FD_dc1_lgdppc_MA15yearI2temp2 omitted because of collin
> earity
note: c.indp2#c.indf1#c.FD_dc1_lgdppc_MA15yearI1temp2 omitted because of collin
> earity
note: c.indp2#c.indf1#c.FD_dc1_lgdppc_MA15yearI2temp2 omitted because of collin
> earity
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity
Warning:  variance matrix is nonsymmetric or highly singular

HDFE Linear regression                            Number of obs   =      7,614
Absorbing 1 HDFE group                            F(  46,    500) =          .
Statistics robust to heteroskedasticity           Prob > F        =          .
                                                  R-squared       =     0.1350
                                                  Adj R-squared   =     0.0213
                                                  Within R-sq.    =     0.0207
Number of clusters (region_i) =        501        Root MSE        =     3.7519

                             (Std. Err. adjusted for 501 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0143455          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0005461          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0243944          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0009884          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000642          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -5.02e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |   .0000147          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |  -2.50e-06          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.70e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   2.74e-06          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   1.26e-09          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -4.07e-08          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   3.53e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |    .000011          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   3.70e-09          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.94e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |    .256291          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   7.247786          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   6.484657          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   17.99096          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .2270463          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0004975          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -2.943162          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |   .0003742          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |    7.98916          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0038605          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -11.78586          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0022976          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_year2te.. |   3.80e-09          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_year2te.. |  -1.44e-10          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_year2te.. |   6.04e-09          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_year2te.. |  -2.40e-10          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -.0002468          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0029185          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -.0081231          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0118734          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   6.67e-08          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -1.25e-10          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -7.24e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -8.54e-11          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   2.06e-06          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -9.51e-10          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -2.99e-06          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   5.63e-10          .        .       .            .           .
             |
DumIncG1F1P1 |   63.39041          .        .       .            .           .
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   88.26827          .        .       .            .           .
DumIncG2F1P2 |          0  (omitted)
       _cons |  -.0425119          .        .       .            .           .
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_inter_`model_name'", replace   
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_inter_TINV_
> clim_quadinter.ster saved

. 
. //calculating weigts for FGLS
. drop if resid==.
(687 observations deleted)

. bysort region_i: egen omega = var(resid)
(51 missing values generated)

. qui gen weight = 1/omega

. drop resid //included

. 
. //run second stage FGLS regression
. reghdfe FD_load_pc `temp_r' `precip_r' `climate_r' ///
> `lgdppc_MA15_r' `income_spline_r' `year_temp_r' `year_income_spline_r' ///
> DumInc* [pw = weight], absorb(i.flow_i#i.product_i#i.year#i.subregionid) clus
> ter(region_i)
(MWFE estimator converged in 1 iterations)
warning: missing F statistic; dropped variables due to collinearity or too few 
> clusters
note: c.indp1#c.indf1#c.FD_yeartemp1_GMFD omitted because of collinearity
note: c.indp1#c.indf1#c.FD_yeartemp2_GMFD omitted because of collinearity
note: c.indp2#c.indf1#c.FD_yeartemp1_GMFD omitted because of collinearity
note: c.indp2#c.indf1#c.FD_yeartemp2_GMFD omitted because of collinearity
note: c.indp1#c.indf1#c.FD_dc1_lgdppc_MA15yearI1temp2 omitted because of collin
> earity
note: c.indp1#c.indf1#c.FD_dc1_lgdppc_MA15yearI2temp2 omitted because of collin
> earity
note: c.indp2#c.indf1#c.FD_dc1_lgdppc_MA15yearI1temp2 omitted because of collin
> earity
note: c.indp2#c.indf1#c.FD_dc1_lgdppc_MA15yearI2temp2 omitted because of collin
> earity
note: DumIncG2F1P1 omitted because of collinearity
note: DumIncG2F1P2 omitted because of collinearity
Warning:  variance matrix is nonsymmetric or highly singular

HDFE Linear regression                            Number of obs   =      7,563
Absorbing 1 HDFE group                            F(  46,    449) =          .
Statistics robust to heteroskedasticity           Prob > F        =          .
                                                  R-squared       =     0.9185
                                                  Adj R-squared   =     0.9078
                                                  Within R-sq.    =     0.1372
Number of clusters (region_i) =        450        Root MSE        =     0.1454

                             (Std. Err. adjusted for 450 clusters in region_i)
------------------------------------------------------------------------------
             |               Robust
  FD_load_pc |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     c.indp1#|
     c.indf1#|
          c. |
FD_temp1_G~D |  -.0144257          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_temp2_G~D |   .0005096          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp1_G~D |    .044972          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_temp2_G~D |  -.0008742          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip1~D |   8.08e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_precip2~D |  -6.75e-08          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip1~D |  -.0000678          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_precip2~D |   1.16e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   3.71e-08          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   3.58e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |  -3.38e-11          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -3.13e-09          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~1_GMFD |   1.96e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~1_GMFD |   6.62e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_hd~2_GMFD |   9.90e-09          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_cd~2_GMFD |  -1.55e-08          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |   1.075325          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   5.239161          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I1lgdp~15 |  -1.085442          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_I2lgdp~15 |   8.067334          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp1 |   .0323741          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I1temp2 |   .0004948          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -3.046736          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0014923          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp1 |  -.6152799          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I1temp2 |  -.0000356          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp1 |  -1.913902          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_~5I2temp2 |  -.0007043          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_yeartem.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_year2te.. |   3.71e-09          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_year2te.. |  -1.32e-10          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_year2te.. |  -1.11e-08          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_year2te.. |   2.19e-10          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -.0000502          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0030757          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |    .000623          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   .0019312          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |          0  (omitted)
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   1.71e-08          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -1.25e-10          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -7.76e-07          .        .       .            .           .
             |
     c.indp1#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   3.82e-10          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -1.58e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   6.77e-12          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |  -4.87e-07          .        .       .            .           .
             |
     c.indp2#|
     c.indf1#|
          c. |
FD_dc1_lgd.. |   1.79e-10          .        .       .            .           .
             |
DumIncG1F1P1 |   37.78971          .        .       .            .           .
DumIncG2F1P1 |          0  (omitted)
DumIncG1F1P2 |   70.37408          .        .       .            .           .
DumIncG2F1P2 |          0  (omitted)
       _cons |   -.039868          .        .       .            .           .
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------------------------------
> --+
                             Absorbed FE | Categories  - Redundant  = Num. Coef
> s                                                                            
>   |
-----------------------------------------+-------------------------------------
> --|
       flow_i#product_i#year#subregionid |       839           0         839   
>                                                                              
>   |
-------------------------------------------------------------------------------
> --+

. estimates save "$OUTPUT/sters/FD_FGLS_inter_`model_name'", replace
file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/sters/FD_FGLS_inter_
> TINV_clim_quadinter.ster saved

. 
. 
. 
. 
end of do-file

. 
. 
. *****************************************************************************
> ***
. * Step 2: Plot Energy Temperature Response
. *****************************************************************************
> ***
.  
. foreach product in "other_energy" "electricity" {
  2.         foreach submodel in "" "EX" "lininter" "quadinter" {
  3.                 
.                 global submodel_ov "`submodel'"
  4.                 global product "`product'"              
  5.                 do $root/1_analysis/interacted_regression/plot_stacked.do
  6.         }
  7. }

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        936    7.712954           0   7.712954   7.712954

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_1C_othe
> r_energy_interacted_TINV_clim.pdf written in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        936    7.712954           0   7.712954   7.712954

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        902    7.727976           0   7.727976   7.727976
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G2_other_energy_interacted_main_model_TINV_clim_overlay_model_EX.pdf writte
> n in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        936    7.712954           0   7.712954   7.712954

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G3B_other_energy_interacted_main_model_TINV_clim_overlay_model_lininter.pdf
>  written in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        936    7.712954           0   7.712954   7.712954

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear

end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,807     9.08701           0    9.08701    9.08701

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_1C_elec
> tricity_interacted_TINV_clim.pdf written in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,807     9.08701           0    9.08701    9.08701

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,706    9.080315           0   9.080315   9.080315
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G2_electricity_interacted_main_model_TINV_clim_overlay_model_EX.pdf written
>  in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,807     9.08701           0    9.08701    9.08701

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear
.         }
. 
. }

. else{
.         local fig "fig_1C"
. }               

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. // create locals to populate with sub plots
. local graphicM=""

. local graphicM_noSE=""

. 
. forval lg=3(-1)1 {      //Income tercile
  2.         forval tr=3(-1)1 {      //Tmean tercile
  3. 
.                 // create cellid for labeling each subplot
.                 local cellid=`lg'+`tr'*100
  4.                 
.                 // grab income and climate covariates to trace out response f
> or this cell
.                 preserve
  5.                 use "$DATA/regression/break_data_`model_main'.dta", clear
  6.                 duplicates drop tpid tgpid, force
  7.                 sort tpid tgpid 
  8.                 local tr_index = `tr' * 3 
  9.                 // create index for grabbing the long run climate to plot 
> in each cell
.                 local subCDD = avgCDD_tpid[`tr_index']
 10.                 local subHDD = avgHDD_tpid[`tr_index']
 11.                 local subInc = avgInc_tgpid[`lg']
 12.                 restore
 13.                         
.                 // set up plotting locals for sub plot
.                 loc SE ""
 14.                 loc noSE ""
 15.                 
.                 // assign fuel index to trace out proper dose response
.                 if "`var'"=="electricity" {
 16.                         local pg=1
 17.                 }
 18.                 else if "`var'"=="other_energy" {
 19.                         local pg=2
 20.                 }
 21. 
.                 // loop over plotting models
.                 foreach type in `type_list' {
 22.                         
.                         // assign model to be plotted
.                         if (strpos("`type'", "ov") > 0) {
 23.                                 local plot_model = "`model_main'_`submodel
> _ov'"
 24.                         }
 25.                         else {
 26.                                 local plot_model = "`model_main'"
 27.                         }
 28.                         
.                         // construct income spline
.                         local deltacut_subInc = `subInc' - `ibar`type''
 29. 
.                         // assign the large income group based on the cell's 
> income covariate
.                         
.                         if `subInc' > `ibar`type'' local ig = 2
 30.                         else if `subInc' <= `ibar`type'' local ig = 1
 31. 
.                         // create dose response function equation
. 
.                         local line ""
 32.                         local add ""
 33.                         
.                         foreach k of num 1/2 {
 34.                                 
.                                 local line = " `line' `add' _b[c.indp`pg'#c.i
> ndf1#c.FD_temp`k'_GMFD] * (temp`k' - 20^`k')"
 35.                                 local line = "`line' + above20*_b[c.indp`p
> g'#c.indf1#c.FD_cdd20_TINVtemp`k'_GMFD]*`subCDD' * (temp`k' - 20^`k')"
 36.                                 local line = "`line' + below20*_b[c.indp`p
> g'#c.indf1#c.FD_hdd20_TINVtemp`k'_GMFD]*`subHDD' * (20^`k' - temp`k')"
 37.                                 local line = "`line' + _b[c.indp`pg'#c.ind
> f1#c.FD_dc1_lgdppc_MA15I`ig'temp`k']*`deltacut_subInc'*(temp`k' - 20^`k')"
 38. 
.                                 if ((strpos("`plot_model'", "lininter") > 0) 
> | (strpos("`plot_model'", "quadinter") > 0)) {
 39.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_yeartemp`k'_GMFD] * (temp`k' - 20^`k')*`year'"
 40.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15yearI`ig'temp`k']*`deltacut_subInc'*`year'*(te
> mp`k' - 20^`k')"
 41.                                 }
 42. 
.                                 if (strpos("`plot_model'", "quadinter") > 0) 
> {
 43.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_year2temp`k'_GMFD] * (temp`k' - 20^`k')*`year'*`year'"
 44.                                         local line = "`line' + _b[c.indp`p
> g'#c.indf1#c.FD_dc1_lgdppc_MA15year2I`ig'temp`k']*`deltacut_subInc'*`year'*`y
> ear'*(temp`k' - 20^`k')"
 45.                                 }
 46. 
.                                 local add " + "
 47. 
.                         }
 48.                         
.                         // trace out does response equation and add to local 
> for plotting 
.                         estimates use "$OUTPUT/sters/FD_FGLS_inter_`plot_mode
> l'"
 49. 
.                         predictnl yhat`cellid'`type' = `line', se(se`cellid'`
> type') ci(lower`cellid'`type' upper`cellid'`type')
 50. 
.                         loc SE = "`SE' rarea upper`cellid'`type' lower`cellid
> '`type' temp1, col(`col`type''%30) || line yhat`cellid'`type' temp1, lc (`col
> `type'') ||"
 51.                         loc noSE = "`noSE' line yhat`cellid'`type' temp1, 
> lc (`col`type'') ||"
 52.                         
.                 }
 53.                 
.                 if ( "`submodel_ov'" == "" ) {
 54.                         // Main model plots include standard errors
.                         tw `SE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, la
> bsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 55.                 }
 56.                 else{
 57.                         //plot with no SE for overlay plots
.                         tw `noSE' , yline(0, lwidth(vthin)) xlabel(-5(10)35, 
> labsize(vsmall)) ///
>                                 ylabel(, labsize(vsmall) nogrid) legend(off) 
> ///
>                                 subtitle("", size(vsmall) color(dkgreen)) ///
>                                 ytitle("", size(vsmall)) xtitle("", size(smal
> l)) ///
>                                 plotregion(color(white)) graphregion(color(wh
> ite)) nodraw ///
>                                 name(Maddgraph`cellid', replace)
 58.                 }                       
 59.                 //add graphic no SE
.                 local graphicM="`graphicM' Maddgraph`cellid'"
 60.         }
 61. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values
note: confidence intervals calculated using Z critical values

. 
. 
. // Plot arrays and save
. 
. //combine cells
. graph combine `graphicM', imargin(zero) ycomm rows(3) ///
>         title("Split Degree Days Poly 2 Interaction Model `var'", size(small)
> ) ///
>         subtitle("`colorGuide'", size(vsmall)) ///
>         plotregion(color(white)) graphregion(color(white)) name(comb_nose, re
> place)

. graph export "$OUTPUT/figures/`fig'_`var'_interacted_`plot_title'.pdf", repla
> ce
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G3B_electricity_interacted_main_model_TINV_clim_overlay_model_lininter.pdf 
> written in PDF format)

. 
. graph drop _all 

. 
. 
end of do-file

. /*
> 
> Purpose: Make 3 x 3 Arrays and Array Overlays energy temperature response wit
> h heterogeneity by climate and by income
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model_main = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local submodel_ov = "$submodel_ov" // What submodel is gettting overlayed on 
> this plot?

. 
. ****** Set Plotting Toggles *************************************************
> ***
. 
. // plotting color for main specification and overlay
. 
. local col_electricity "dknavy"

. local col_electricity_ov "red"

. local col_other_energy "dkorange"

. local col_other_energy_ov "black"

. 
. local col_main "`col_`var''"

. local col_ov "`col_`var'_ov'"

. 
. // year to plot temporal trend model:
. 
. local year = 2099

.                         
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model_main'_regsort.dta", clear

. 
. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. gen above20 = (temp1 >= 20) //above 20 indicator

. gen below20 = (temp1 < 20) //below 20 indicator

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) assigning whether to plot an overlay or not
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model_main'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,807     9.08701           0    9.08701    9.08701

. local ibar_main = `r(max)'

. restore

. 
. /* if the underlying dataset differs for a given robustness model, 
> the income spline knot location will vary because the income decile
> locations are different.*/
. 
. if ( "`submodel_ov'" == "EX"  ) {
.         preserve
.         use "$DATA/regression/break_data_`model_main'_`submodel_ov'.dta", cle
> ar
.         summ maxInc_largegpid_`var' if largegpid_`var' == 1
.         local ibar_ov = `r(max)'
.         restore
. }

. else {
.         local ibar_ov = `ibar_main'
. }

. 
. * Set plotting locals and name tags 
. 
. local colorGuide " Model Spec: `model_main' (`col_main') "

. local plot_title "`model_main'"

. 
. // create list of model types to loop over
. local type_list " _main "

. 
. if ( "`submodel_ov'" != "" ) {
.         
.         // add to list of model types to loop over
.         local type_list " _ov `type_list' "
.         
.         // create colorguide to help viewer decipher between overlayed spec a
> nd non overlayed spec
.         local colorGuide "`colorGuide' Overlay Spec: `model_main'_`submodel_o
> v' (`col_ov') "
. 
.         local plot_title "main_model_`plot_title'_overlay_model_`submodel_ov'
> "
. 
.         if ("`submodel_ov'" == "lininter" ) {
.                 local fig "fig_Appendix-G3B"
.         }
.         
.         if "`submodel_ov'" == "EX" {
.                 local fig "fig_Appendix-G2"
.         }
.         if ("`submodel_ov'" == "quadinter") {
.                 exit, clear

end of do-file

.  
. *****************************************************************************
> ***
. * Step 3: Plot Marginal Effect of Time on Energy Temperature Response 
. * for Temporal Trend Model
. *****************************************************************************
> ***
. 
. foreach product in "other_energy" "electricity" {
  2.         global product "`product'"
  3.         do $root/1_analysis/interacted_regression/plot_time_marginal_effec
> t.do
  4. }

. /*
> 
> Purpose: Plot change in energy temperature response per year in Temporal Tren
> d Model
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local fig = "fig_Appendix-G3A" // Whats the plots figure number in the paper?

. 
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model'_regsort.dta", clear

. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) load ster
.         * b) assigning product index
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~gy |        936    7.712954           0   7.712954   7.712954

. local ibar = `r(max)'

. restore

. 
. * load temporal trend ster file
. 
. 
. estimates use "$OUTPUT/sters/FD_FGLS_inter_`model'_lininter.ster"

. 
. * set product specific index for coefficients
. 
. if "`var'"=="electricity" {
.         local pg=1
. }

. else if "`var'"=="other_energy" {
.         local pg=2
. }

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. * loop over income terciles
. 
. forval lg = 1/3 {
  2. 
.         // get income spline for plotting
.         
.         preserve
  3.         
.                 use "$DATA/regression/break_data_`model'.dta", clear
  4.                 duplicates drop tpid tgpid, force
  5.                 sort tpid tgpid 
  6.                 local subInc = avgInc_tgpid[`lg']
  7.                 local deltacut_subInc = `subInc' - `ibar'
  8. 
.         restore
  9. 
.         // assign the large income group based on the cell's income covariate
.         if `subInc' > `ibar' local ig = 2
 10.         else if `subInc' <= `ibar' local ig = 1
 11. 
.         // construct energy temperature response marginal effect of time in t
> ech trend model
.         local line ""
 12.         local add ""
 13.         forval k=1/2 {
 14.                 local line " `line' `add' _b[c.indp`pg'#c.indf1#c.FD_yeart
> emp`k'_GMFD] * (temp`k' - 20^`k') "
 15.                 local line "`line' + _b[c.indp`pg'#c.indf1#c.FD_dc1_lgdppc
> _MA15yearI`ig'temp`k'] * `deltacut_subInc' * (temp`k' - 20^`k')"
 16.                 local add " + "
 17.         }
 18. 
.         ** trace out dose response marginal effect
.         predictnl yhat`lg' = `line', se(se`lg') ci(lower`lg' upper`lg')
 19. 
.         * plot dose response
.         tw rarea upper`lg' lower`lg' temp1, col(ltbluishgray) || line yhat`lg
> ' temp1, lc (dknavy) ///
>         yline(0, lwidth(vthin)) xlabel(-5(10)35, labsize(vsmall)) ///
>         ylabel(, labsize(vsmall) nogrid) legend(off) ///
>         subtitle("Income Tercile `lg'", size(vsmall) color(dkgreen)) ///
>         ytitle("", size(small)) xtitle("", size(small)) ///
>         plotregion(color(white)) graphregion(color(white)) nodraw ///
>         name(MEaddgraph`lg', replace)                   
 20.         **add graphic**
.         local MEgraphic= "`MEgraphic' MEaddgraph`lg'"
 21. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

.         
.         
. graph combine `MEgraphic', imargin(zero) ycomm rows(1) xsize(9) ysize(3) ///
> subtitle("Marginal Effect of Time `var'", size(small)) ///
> plotregion(color(white)) graphregion(color(white)) name(comb`i', replace)

. graph export "$OUTPUT/figures/`fig'_ME_time_`model'_lininter_`var'.pdf", repl
> ace
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G3A_ME_time_TINV_clim_lininter_other_energy.pdf written in PDF format)

. graph drop _all

. 
. 
. 
. 
end of do-file

. /*
> 
> Purpose: Plot change in energy temperature response per year in Temporal Tren
> d Model
> 
> */
. 
. set scheme s1color

. 
. ****** Set Model Specification Locals ***************************************
> ***
. 
. local model = "$model" // What is the main model for this plot?

. local var = "$product" // What product's response function are we plotting?

. local fig = "fig_Appendix-G3A" // Whats the plots figure number in the paper?

. 
. *****************************************************************************
> ***
. * Step 1: Load Data and Clean for Plotting
. *****************************************************************************
> ***
.                 
. use "$DATA/regression/GMFD_`model'_regsort.dta", clear

. //Set up locals for plotting
. local obs = 35 + abs(-5) + 1

. 
. //clean data for plotting
. drop if _n > 0
(8,301 observations deleted)

. set obs `obs'
number of observations (_N) was 0, now 41

. 
. replace temp1_GMFD = _n - 6
(41 real changes made)

. 
. foreach k of num 1/2 {
  2.         rename temp`k'_GMFD temp`k'
  3.         replace temp`k' = temp1 ^ `k'
  4. }
(0 real changes made)
(41 real changes made)

. 
. *****************************************************************************
> ***
. * Step 2: Set up for plotting by: 
.         * a) finding knot location 
.         * b) load ster
.         * b) assigning product index
. *****************************************************************************
> ***
. 
. * Get Income Spline Knot Location 
.         
. preserve

. use "$DATA/regression/break_data_`model'.dta", clear

. summ maxInc_largegpid_`var' if largegpid_`var' == 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
maxInc_la~ty |      2,807     9.08701           0    9.08701    9.08701

. local ibar = `r(max)'

. restore

. 
. * load temporal trend ster file
. 
. 
. estimates use "$OUTPUT/sters/FD_FGLS_inter_`model'_lininter.ster"

. 
. * set product specific index for coefficients
. 
. if "`var'"=="electricity" {
.         local pg=1
. }

. else if "`var'"=="other_energy" {
.         local pg=2
. }

. 
. *****************************************************************************
> ***
. * Step 3: Plot, Plot, Plot
. *****************************************************************************
> ***
. 
. * loop over income terciles
. 
. forval lg = 1/3 {
  2. 
.         // get income spline for plotting
.         
.         preserve
  3.         
.                 use "$DATA/regression/break_data_`model'.dta", clear
  4.                 duplicates drop tpid tgpid, force
  5.                 sort tpid tgpid 
  6.                 local subInc = avgInc_tgpid[`lg']
  7.                 local deltacut_subInc = `subInc' - `ibar'
  8. 
.         restore
  9. 
.         // assign the large income group based on the cell's income covariate
.         if `subInc' > `ibar' local ig = 2
 10.         else if `subInc' <= `ibar' local ig = 1
 11. 
.         // construct energy temperature response marginal effect of time in t
> ech trend model
.         local line ""
 12.         local add ""
 13.         forval k=1/2 {
 14.                 local line " `line' `add' _b[c.indp`pg'#c.indf1#c.FD_yeart
> emp`k'_GMFD] * (temp`k' - 20^`k') "
 15.                 local line "`line' + _b[c.indp`pg'#c.indf1#c.FD_dc1_lgdppc
> _MA15yearI`ig'temp`k'] * `deltacut_subInc' * (temp`k' - 20^`k')"
 16.                 local add " + "
 17.         }
 18. 
.         ** trace out dose response marginal effect
.         predictnl yhat`lg' = `line', se(se`lg') ci(lower`lg' upper`lg')
 19. 
.         * plot dose response
.         tw rarea upper`lg' lower`lg' temp1, col(ltbluishgray) || line yhat`lg
> ' temp1, lc (dknavy) ///
>         yline(0, lwidth(vthin)) xlabel(-5(10)35, labsize(vsmall)) ///
>         ylabel(, labsize(vsmall) nogrid) legend(off) ///
>         subtitle("Income Tercile `lg'", size(vsmall) color(dkgreen)) ///
>         ytitle("", size(small)) xtitle("", size(small)) ///
>         plotregion(color(white)) graphregion(color(white)) nodraw ///
>         name(MEaddgraph`lg', replace)                   
 20.         **add graphic**
.         local MEgraphic= "`MEgraphic' MEaddgraph`lg'"
 21. }

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

Duplicates in terms of tpid tgpid

(4,669 observations deleted)
note: confidence intervals calculated using Z critical values

.         
.         
. graph combine `MEgraphic', imargin(zero) ycomm rows(1) xsize(9) ysize(3) ///
> subtitle("Marginal Effect of Time `var'", size(small)) ///
> plotregion(color(white)) graphregion(color(white)) name(comb`i', replace)

. graph export "$OUTPUT/figures/`fig'_ME_time_`model'_lininter_`var'.pdf", repl
> ace
(file //Users/ruixueli/Downloads/energy_data_release/OUTPUT/figures/fig_Appendi
> x-G3A_ME_time_TINV_clim_lininter_electricity.pdf written in PDF format)

. graph drop _all

. 
. 
. 
. 
end of do-file

. 
. log close _all
      name:  <unnamed>
       log:  /Users/ruixueli/Downloads/energy_data_release/LOG/1_analysis/3_int
> eracted_regression.log
  log type:  text
 closed on:   7 Sep 2021, 05:09:25
-------------------------------------------------------------------------------

. 
end of do-file
