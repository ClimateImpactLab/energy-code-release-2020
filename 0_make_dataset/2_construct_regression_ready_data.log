
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        https://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Stata license: 745-user network, expiring 30 Jun 2022
Serial number: 501709313533
  Licensed to: Ruixue Li
               UChicago BFI

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. Maximum number of variables is set to 5,000; see help set_maxvar.

. do 2_construct_regression_ready_data.do 

. /*
> 
> Purpose: Master Do File for Analysis Dataset Construction
> (Takes dataset from cleaned from IEA_merged_long*.dta to GMFD_*_regsort.dta)
> 
> Step 1) Construct reporting regimes and drop data according to selected coded
>  issues
> Step 2) Match product specific climate data with product
> Step 3) Identify income spline knot location by constructing two income group
> s for each product
> Step 4) Perform Final Cleaning Steps before first differenced interacted vari
> able construction
>         * Classify countries within 1 of 13 UN regions
>         * Classify countries in income deciles and groups
> Step 5) Construct First Differenced Interacted Variables
>  
> */
. 
. clear all

. set more off

. qui ssc inst egenmore

. macro drop _all

. pause off

. global LOG: env LOG

. log using $LOG/0_make_dataset/2_construct_regression_ready_data.log, replace
(note: file /Users/ruixueli/Downloads/energy_data_release/LOG/0_make_dataset/2_
> construct_regression_ready_data.log not found)
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/ruixueli/Downloads/energy_data_release/LOG/0_make_dataset/2
> _construct_regression_ready_data.log
  log type:  text
 opened on:  18 Oct 2021, 20:59:52

. 
. /////////////// SET UP USER SPECIFIC PATHS //////////////////////////////////
> ////////////////////
> 
. // path to energy-code-release repo 
. 
. global REPO: env REPO

. global root "$REPO/energy-code-release-2020"

. global DATA: env DATA 

. 
. /////////////////////////////////////////////////////////////////////////////
> ////////////////////
> 
. ******Set Script Toggles*****************************************************
> ***
. 
. // What model do you want? TINV_clim or TINV_clim_EX
. global model "TINV_clim"

. local model $model      

. 
. *************************************************************************
. * Step 1) Construct FE regimes and drop data according to specification
. *************************************************************************
. 
. do "$root/0_make_dataset/merged/1_issue_fix_v2.do"

. /*
> 
> Purpose: Apply Coded Issues
> 
> */
. 
. ******Set Script Toggles*****************************************************
> ***
. 
. // toggle for dropping exclusively estimated data
. local model $model

. 
. *****************************************************************************
> ***
. * Step 1: Load Energy Data and Coded Issues to Apply to Energy Dataset
. *****************************************************************************
> ***
. 
. // Part A: Make Energy Dataset Tempfile and retrieve Country List for looping
. 
. use "$DATA/regression/IEA_Merged_long_GMFD.dta", clear

. drop countryid

. keep if year>=1971 & year<=2012
(0 observations deleted)

. generate FEtag="G"

. tempfile energy_long

. save `energy_long', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000001 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000001 saved

. keep if temp1_GMFD !=.
(2,946 observations deleted)

. duplicates drop country, force

Duplicates in terms of country

(11,149 observations deleted)

. levelsof country, local(countrylist)
`"AGO"' `"ALB"' `"ARE"' `"ARG"' `"ARM"' `"AUS"' `"AUT"' `"AZE"' `"BEL"' `"BEN"'
>  `"BGD"' `"BGR"' `"BHR"' `"BIH"' `"BLR"' `"BOL"' `"BRA"' `"BRN"' `"BWA"' `"CA
> N"' `"CHE"' `"CHL"' `"CHN"' `"CIV"' `"CMR"' `"COD"' `"COG"' `"COL"' `"CRI"' `
> "CUB"' `"CUW"' `"CYP"' `"CZE"' `"DEU"' `"DNK"' `"DOM"' `"DZA"' `"ECU"' `"EGY"
> ' `"ERI"' `"ESP"' `"EST"' `"ETH"' `"FIN"' `"FRA"' `"FSUND"' `"GAB"' `"GBR"' `
> "GEO"' `"GHA"' `"GIB"' `"GRC"' `"GRL"' `"GTM"' `"HKG"' `"HND"' `"HRV"' `"HTI"
> ' `"HUN"' `"IDN"' `"IND"' `"IRL"' `"IRN"' `"IRQ"' `"ISL"' `"ISR"' `"ITA"' `"J
> AM"' `"JOR"' `"JPN"' `"KAZ"' `"KEN"' `"KGZ"' `"KHM"' `"KOR"' `"KWT"' `"LBN"' 
> `"LBY"' `"LKA"' `"LTU"' `"LUX"' `"LVA"' `"MAR"' `"MDA"' `"MEX"' `"MKD"' `"MLI
> "' `"MLT"' `"MNE"' `"MNG"' `"MOZ"' `"MUS"' `"MYS"' `"NAM"' `"NER"' `"NGA"' `"
> NIC"' `"NLD"' `"NOR"' `"NPL"' `"NZL"' `"OMN"' `"PAK"' `"PAN"' `"PER"' `"PHL"'
>  `"POL"' `"PRK"' `"PRT"' `"PRY"' `"QAT"' `"ROU"' `"RUS"' `"SAU"' `"SDN"' `"SE
> N"' `"SGP"' `"SLV"' `"SRB"' `"SUR"' `"SVK"' `"SVN"' `"SWE"' `"SYR"' `"TGO"' `
> "THA"' `"TJK"' `"TKM"' `"TTO"' `"TUN"' `"TUR"' `"TWN"' `"TZA"' `"UKR"' `"URY"
> ' `"USA"' `"UZB"' `"VEN"' `"VNM"' `"XKO"' `"YEM"' `"YUGOND"' `"ZAF"' `"ZMB"' 
> `"ZWE"'

. 
. // Part B: Load Coded Issues - type/set of coded issues specified with toggle
>  at top of code
. 
. insheet using "$root/0_make_dataset/coded_issues/cleaned_coded_issues.csv", c
> omma names clear
(15 vars, 776 obs)

. 
. foreach variable in "grey" "flag_drop" {
  2.         replace `variable' = 0 if `variable' == .
  3. }
(491 real changes made)
(738 real changes made)

. 
. // Part C: Set up Exclusively Estimated Observations to be Dropped if model r
> equires it
. 
. if ("`model'" == "TINV_clim_EX" ) {
.         replace grey = 9 if ex_ex == 1 
.         di "Set up exclusively estimated data to be dropped."
. }

. 
. *****************************************************************************
> ***
. * Step 2: Clean Coded Issues and Save in Issue Type Specific Datasets
. *****************************************************************************
> ***
. 
. ** replace to match the main file**
. keep country sector fuel issue_code year_start year_end flag_drop grey

. 
. foreach var in fuel sector {
  2.         qui replace `var'="" if `var' == "." | `var'==""
  3. }

. 
. rename sector flow

. rename fuel product

. 
. replace product="biofuels" if product=="biofuels and waste" | product == "bio
> fuelsandwaste"
(96 real changes made)

. replace product="heat_other" if product=="heat"
(61 real changes made)

. replace product="natural_gas" if product=="natural gas" | product=="naturalga
> s"
(80 real changes made)

. replace product="oil_products" if product=="oil"
(110 real changes made)

. replace product="solar" if product=="solar and geothermal"
(0 real changes made)

. replace product="all" if product==""
(242 real changes made)

. 
. ** save FEcut and dropped files individually**
. 
. // Create tempfile for coded issues that classify observations into a FE regi
> me
. preserve

.         keep if flag_drop==0 & grey==0
(160 observations deleted)

.         drop flag_drop grey

.         tempfile fixed_effects

.         save `fixed_effects', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000003 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000003 saved

. restore

. 
. // Create tempfile for coded 
. preserve

.         keep if flag_drop==1
(739 observations deleted)

.         drop flag_drop grey

.         tempfile flag_drop_issues

.         save `flag_drop_issues', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000005 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000005 saved

. restore

. 
. preserve

.         keep if grey == 1
(677 observations deleted)

.         drop flag_drop grey

.         tempfile grey_one_issues

.         save `grey_one_issues', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000007 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000007 saved

. restore

. 
. preserve

.         keep if grey == 9
(752 observations deleted)

.         drop flag_drop grey

.         tempfile grey_nine_issues

.         save `grey_nine_issues', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000009 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000009 saved

. restore

. 
. **Make temp files for saving future data
. 
. preserve

.         drop if _n > 0
(776 observations deleted)

.         tempfile fixed_effects_file

.         save `fixed_effects_file', replace
(note: dataset contains 0 observations)
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000b no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000b saved

.         tempfile flag_drop_issues_file

.         save `flag_drop_issues_file', replace
(note: dataset contains 0 observations)
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000c no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000c saved

.         tempfile grey_one_issues_file

.         save `grey_one_issues_file', replace
(note: dataset contains 0 observations)
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000d no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000d saved

.         tempfile grey_nine_issues_file

.         save `grey_nine_issues_file', replace
(note: dataset contains 0 observations)
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000e no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.00000e saved

. restore

. 
. *****************************************************************************
> ***
. * Step 3: Write Programs To Use In Country Flow Product Loop
. *****************************************************************************
> ***
. 
. //Issue Data Cleaning and Reshaping Programs
. 
. program define clean_issues
  1. 
. syntax , country(string) flow(string) product(string)
  2. 
.         //di "country: `country' flow: `flow' product: `product'"
. 
.         //country
.         qui keep if country=="`country'"
  3.                                 
.         //flow
. 
.         qui replace flow="`flow'"
  4. 
.         //product
.         if ("`product'"=="other_energy") {
  5.                 qui keep if product!="electricity"
  6.         }
  7.         else if ("`product'"== "electricity") {
  8.                 qui keep if product=="`product'" | product=="all" | produc
> t=="all but biofuels" | product == "allbutbiofuels"
  9.         }
 10.                                 
.         qui replace product="`product'"
 11. 
. end

. 
. program define restructure_issues, rclass
  1. 
.         **duplicates drop**
.         qui duplicates drop year_start year_end, force
  2.                                         
.         **sort and generate tag**
.         sort year_start
  3.         qui drop if country==""
  4.         qui generate idn=_n
  5.                                         
.         **local parameters**
.         qui summ idn
  6.         local mt=r(N)
  7.                                         
.         **invert to obtain year segments**
.         qui drop issue_code //drop disturbing factors for now
  8.         qui reshape wide year_start year_end, i(country flow product) j(id
> n)
  9. 
.         return scalar mt = `mt'
 10. end

. 
. 
. //Programs specific to each particular type of issue
. 
. program define fixed_effects //pass in number of observations to apply
  1.         
.         **assign flags to different years, Greg's algorithm of adding on**
.         forval i=1/`1' {
  2.                 qui replace FEtag=FEtag+"1" if year>=year_start`i' & year<
> =year_end`i' 
  3.                 qui replace FEtag=FEtag+"0" if year<year_start`i' | year>y
> ear_end`i' 
  4.         }
  5. 
. end

. 
. program define flag_drop_issues //pass in number of observations to apply
  1. 
.         forval i=1/`1' {
  2.                 qui drop if year>=year_start`i' & year<=year_end`i' 
  3.         }
  4. 
. end

. 
. program define grey_one_issues //pass in number of observations to apply
  1. 
.         forval i=1/`1' {
  2.                 qui drop if year<year_start`i' | year>year_end`i' 
  3.         }
  4. 
. end

. 
. program define grey_nine_issues //pass in number of observations to apply
  1. 
.         forval i=1/`1' {
  2.                 qui drop if year>=year_start`i' & year<=year_end`i' 
  3.         }
  4. 
. 
. end

. 
. *****************************************************************************
> ***
. * Step 4: Apply Issues Selected and Save Issue Fixed Data
. *****************************************************************************
> ***
. 
. **loop through fuels**
. foreach var in "other_energy" "electricity" {
  2.         **loop through sectors**
.         foreach tag in "COMPILE" {
  3.                 **loop through countries**
.                 foreach loc in `countrylist' {
  4.                 
.                         timer on 1
  5.                         
.                         local merge_file "energy_long"
  6.                         
.                         foreach it in "fixed_effects" "flag_drop_issues" "gre
> y_one_issues" "grey_nine_issues" { //note order issues are applied matters
  7.                                 
.                                 //load in and clean issues
.                                 qui use ``it'', clear
  8.                                 
.                                 clean_issues, country("`loc'") flow("`tag'") 
> product("`var'")
  9.                                 
.                                 qui count 
 10.                                 local ct=r(N)
 11.                                 local zt=1
 12.                                                                 
.                                 **proceed only when the issue exists**
.                                 if `ct'!=0 & `zt'==1 {
 13.                                         
.                                         //compress issues so no time segement
> s overlap, clean, and reshape
.                                         restructure_issues
 14.                                         local mt =`r(mt)'
 15.                                         
.                                         **merge back to IEA datas**
.                                         qui merge 1:m country flow product us
> ing ``merge_file''
 16.                                         
.                                         //Datasets only have to match if no d
> ata points have been dropped
.                                         if ("`it'" == "fixed_effects" | "`it'
> " == "flag_drop_issues" ) {
 17.                                                 assert _merge != 1
 18.                                         }
 19.                                         
.                                         qui keep if _merge == 3
 20.                                         drop _merge
 21.                                         
.                                         //run issue type specific program to 
> clean data
.                                         `it' `mt'
 22.                         
.                                         **save and tempfile**
.                                         drop year_start* year_end*
 23.                                         tempfile file`loc'
 24.                                         qui save `file`loc'', replace
 25.                                         
.                                 }
 26.                                 else if `ct'==0 & `zt'==1 {
 27.                                         
.                                         **keep the original data**
.                                         qui use ``merge_file'', clear
 28.                                         qui keep if country=="`loc'"
 29.                                         qui keep if flow=="`tag'"
 30.                                         qui keep if product=="`var'"
 31.                                         
.                                         **save and tempfile**
.                                         tempfile file`loc'
 32.                                         qui save `file`loc'', replace
 33.                                 
.                                 }
 34.                                 else if `zt'==0 {
 35.                                 
.                                         **keep the original data**
.                                         qui use ``merge_file'', clear
 36.                                         qui drop if _n>0
 37.                                         
.                                         **save and tempfile**
.                                         tempfile file`loc'
 38.                                         qui save `file`loc'', replace   
 39.                                         
.                                 }
 40.                                 local merge_file = "`it'_file"
 41.                                 **appending back to the long data**
.                                 qui use ``merge_file'', clear
 42.                                 append using `file`loc''
 43.                                 qui save ``merge_file'', replace
 44.                         }
 45.                         
.                         timer off 1
 46.                         qui timer list 1
 47.                         local tim=r(t1)
 48.                         timer clear
 49.                         
.                         **keep time track**
.                         display "`var' `tag' `loc'-`tim's"
 50.                 
.                 }
 51.         }
 52. }
(note: variable country was str3, now str24 to accommodate using data's
       values)
(note: variable country was str3, now str24 to accommodate using data's
       values)
(note: variable country was str3, now str24 to accommodate using data's
       values)
(note: variable country was str3, now str24 to accommodate using data's
       values)
other_energy COMPILE AGO-.013s
(note: variable FEtag was str1, now str2 to accommodate using data's values)
(note: variable FEtag was str1, now str2 to accommodate using data's values)
(note: variable FEtag was str1, now str2 to accommodate using data's values)
(note: variable FEtag was str1, now str2 to accommodate using data's values)
other_energy COMPILE ALB-.074s
(note: variable FEtag was str2, now str6 to accommodate using data's values)
(note: variable FEtag was str2, now str6 to accommodate using data's values)
(note: variable FEtag was str2, now str6 to accommodate using data's values)
(note: variable FEtag was str2, now str6 to accommodate using data's values)
other_energy COMPILE ARE-.055s
other_energy COMPILE ARG-.011s
other_energy COMPILE ARM-.057s
(note: variable FEtag was str6, now str9 to accommodate using data's values)
(note: variable FEtag was str6, now str9 to accommodate using data's values)
(note: variable FEtag was str6, now str9 to accommodate using data's values)
(note: variable FEtag was str6, now str9 to accommodate using data's values)
other_energy COMPILE AUS-.084s
other_energy COMPILE AUT-.094s
other_energy COMPILE AZE-.053s
(note: variable FEtag was str9, now str11 to accommodate using data's values)
(note: variable FEtag was str9, now str11 to accommodate using data's values)
(note: variable FEtag was str9, now str11 to accommodate using data's values)
(note: variable FEtag was str9, now str11 to accommodate using data's values)
other_energy COMPILE BEL-.071s
other_energy COMPILE BEN-.051s
other_energy COMPILE BGD-.05s
other_energy COMPILE BGR-.009s
other_energy COMPILE BHR-.047s
other_energy COMPILE BIH-.058s
other_energy COMPILE BLR-.054s
other_energy COMPILE BOL-.045s
other_energy COMPILE BRA-.052s
other_energy COMPILE BRN-.048s
other_energy COMPILE BWA-.055s
other_energy COMPILE CAN-.072s
other_energy COMPILE CHE-.068s
other_energy COMPILE CHL-.048s
other_energy COMPILE CHN-.053s
other_energy COMPILE CIV-.0600000000000001s
other_energy COMPILE CMR-.013s
other_energy COMPILE COD-.014s
other_energy COMPILE COG-.06s
other_energy COMPILE COL-.014s
other_energy COMPILE CRI-.064s
other_energy COMPILE CUB-.052s
other_energy COMPILE CUW-.059s
other_energy COMPILE CYP-.054s
other_energy COMPILE CZE-.07s
(note: variable FEtag was str11, now str13 to accommodate using data's
       values)
(note: variable FEtag was str11, now str13 to accommodate using data's
       values)
(note: variable FEtag was str11, now str13 to accommodate using data's
       values)
(note: variable FEtag was str11, now str13 to accommodate using data's
       values)
other_energy COMPILE DEU-.081s
other_energy COMPILE DNK-.079s
other_energy COMPILE DOM-.049s
other_energy COMPILE DZA-.049s
other_energy COMPILE ECU-.049s
other_energy COMPILE EGY-.049s
other_energy COMPILE ERI-.024s
other_energy COMPILE ESP-.087s
other_energy COMPILE EST-.025s
other_energy COMPILE ETH-.064s
other_energy COMPILE FIN-.0620000000000001s
other_energy COMPILE FRA-.083s
other_energy COMPILE FSUND-.015s
other_energy COMPILE GAB-.051s
other_energy COMPILE GBR-.062s
other_energy COMPILE GEO-.056s
other_energy COMPILE GHA-.054s
other_energy COMPILE GIB-.014s
other_energy COMPILE GRC-.07s
other_energy COMPILE GRL-.023s
other_energy COMPILE GTM-.054s
other_energy COMPILE HKG-.054s
other_energy COMPILE HND-.061s
other_energy COMPILE HRV-.024s
other_energy COMPILE HTI-.062s
other_energy COMPILE HUN-.071s
other_energy COMPILE IDN-.059s
other_energy COMPILE IND-.058s
other_energy COMPILE IRL-.09s
other_energy COMPILE IRN-.0590000000000001s
other_energy COMPILE IRQ-.06s
other_energy COMPILE ISL-.068s
other_energy COMPILE ISR-.061s
other_energy COMPILE ITA-.063s
other_energy COMPILE JAM-.058s
other_energy COMPILE JOR-.059s
other_energy COMPILE JPN-.059s
other_energy COMPILE KAZ-.07s
other_energy COMPILE KEN-.058s
other_energy COMPILE KGZ-.07s
other_energy COMPILE KHM-.028s
other_energy COMPILE KOR-.085s
other_energy COMPILE KWT-.071s
other_energy COMPILE LBN-.018s
other_energy COMPILE LBY-.059s
other_energy COMPILE LKA-.07s
other_energy COMPILE LTU-.034s
other_energy COMPILE LUX-.082s
other_energy COMPILE LVA-.082s
other_energy COMPILE MAR-.066s
other_energy COMPILE MDA-.078s
other_energy COMPILE MEX-.079s
other_energy COMPILE MKD-.075s
other_energy COMPILE MLI-.021s
other_energy COMPILE MLT-.024s
other_energy COMPILE MNE-.073s
other_energy COMPILE MNG-.074s
other_energy COMPILE MOZ-.062s
other_energy COMPILE MUS-.019s
other_energy COMPILE MYS-.062s
other_energy COMPILE NAM-.077s
other_energy COMPILE NER-.073s
other_energy COMPILE NGA-.085s
other_energy COMPILE NIC-.022s
other_energy COMPILE NLD-.089s
other_energy COMPILE NOR-.133s
other_energy COMPILE NPL-.024s
other_energy COMPILE NZL-.11s
other_energy COMPILE OMN-.063s
other_energy COMPILE PAK-.066s
other_energy COMPILE PAN-.021s
other_energy COMPILE PER-.035s
other_energy COMPILE PHL-.023s
other_energy COMPILE POL-.103s
other_energy COMPILE PRK-.061s
other_energy COMPILE PRT-.089s
other_energy COMPILE PRY-.021s
other_energy COMPILE QAT-.076s
other_energy COMPILE ROU-.062s
other_energy COMPILE RUS-.076s
other_energy COMPILE SAU-.061s
other_energy COMPILE SDN-.065s
other_energy COMPILE SEN-.07s
other_energy COMPILE SGP-.073s
other_energy COMPILE SLV-.065s
other_energy COMPILE SRB-.082s
other_energy COMPILE SUR-.075s
other_energy COMPILE SVK-.079s
other_energy COMPILE SVN-.084s
other_energy COMPILE SWE-.084s
other_energy COMPILE SYR-.063s
other_energy COMPILE TGO-.0679999999999999s
other_energy COMPILE THA-.074s
other_energy COMPILE TJK-.084s
other_energy COMPILE TKM-.04s
other_energy COMPILE TTO-.066s
other_energy COMPILE TUN-.067s
other_energy COMPILE TUR-.103s
other_energy COMPILE TWN-.064s
other_energy COMPILE TZA-.073s
other_energy COMPILE UKR-.081s
other_energy COMPILE URY-.077s
other_energy COMPILE USA-.127s
other_energy COMPILE UZB-.075s
other_energy COMPILE VEN-.073s
other_energy COMPILE VNM-.069s
other_energy COMPILE XKO-.064s
other_energy COMPILE YEM-.066s
other_energy COMPILE YUGOND-.023s
other_energy COMPILE ZAF-.082s
other_energy COMPILE ZMB-.065s
other_energy COMPILE ZWE-.071s
electricity COMPILE AGO-.027s
electricity COMPILE ALB-.083s
electricity COMPILE ARE-.07s
electricity COMPILE ARG-.028s
electricity COMPILE ARM-.089s
electricity COMPILE AUS-.097s
electricity COMPILE AUT-.087s
electricity COMPILE AZE-.047s
electricity COMPILE BEL-.069s
electricity COMPILE BEN-.072s
electricity COMPILE BGD-.07s
electricity COMPILE BGR-.029s
electricity COMPILE BHR-.089s
electricity COMPILE BIH-.084s
electricity COMPILE BLR-.083s
electricity COMPILE BOL-.028s
electricity COMPILE BRA-.029s
electricity COMPILE BRN-.069s
electricity COMPILE BWA-.088s
electricity COMPILE CAN-.099s
electricity COMPILE CHE-.062s
electricity COMPILE CHL-.028s
electricity COMPILE CHN-.072s
electricity COMPILE CIV-.075s
electricity COMPILE CMR-.068s
electricity COMPILE COD-.031s
electricity COMPILE COG-.072s
electricity COMPILE COL-.034s
electricity COMPILE CRI-.077s
electricity COMPILE CUB-.076s
electricity COMPILE CUW-.075s
electricity COMPILE CYP-.069s
electricity COMPILE CZE-.092s
electricity COMPILE DEU-.069s
electricity COMPILE DNK-.096s
electricity COMPILE DOM-.077s
electricity COMPILE DZA-.075s
electricity COMPILE ECU-.073s
electricity COMPILE EGY-.072s
electricity COMPILE ERI-.054s
electricity COMPILE ESP-.073s
electricity COMPILE EST-.089s
electricity COMPILE ETH-.078s
electricity COMPILE FIN-.078s
electricity COMPILE FRA-.103s
electricity COMPILE FSUND-.035s
electricity COMPILE GAB-.073s
electricity COMPILE GBR-.056s
electricity COMPILE GEO-.074s
electricity COMPILE GHA-.031s
electricity COMPILE GIB-.034s
electricity COMPILE GRC-.033s
electricity COMPILE GRL-.035s
electricity COMPILE GTM-.034s
electricity COMPILE HKG-.069s
electricity COMPILE HND-.074s
electricity COMPILE HRV-.052s
electricity COMPILE HTI-.069s
electricity COMPILE HUN-.055s
electricity COMPILE IDN-.075s
electricity COMPILE IND-.069s
electricity COMPILE IRL-.074s
electricity COMPILE IRN-.075s
electricity COMPILE IRQ-.079s
electricity COMPILE ISL-.076s
electricity COMPILE ISR-.071s
electricity COMPILE ITA-.072s
electricity COMPILE JAM-.075s
electricity COMPILE JOR-.087s
electricity COMPILE JPN-.073s
electricity COMPILE KAZ-.101s
electricity COMPILE KEN-.078s
electricity COMPILE KGZ-.103s
electricity COMPILE KHM-.064s
electricity COMPILE KOR-.092s
electricity COMPILE KWT-.075s
electricity COMPILE LBN-.077s
electricity COMPILE LBY-.077s
electricity COMPILE LKA-.077s
electricity COMPILE LTU-.095s
electricity COMPILE LUX-.077s
electricity COMPILE LVA-.117s
electricity COMPILE MAR-.073s
electricity COMPILE MDA-.105s
electricity COMPILE MEX-.071s
electricity COMPILE MKD-.102s
electricity COMPILE MLI-.036s
electricity COMPILE MLT-.076s
electricity COMPILE MNE-.097s
electricity COMPILE MNG-.101s
electricity COMPILE MOZ-.076s
electricity COMPILE MUS-.04s
electricity COMPILE MYS-.076s
electricity COMPILE NAM-.061s
electricity COMPILE NER-.097s
electricity COMPILE NGA-.094s
electricity COMPILE NIC-.036s
electricity COMPILE NLD-.078s
electricity COMPILE NOR-.042s
electricity COMPILE NPL-.039s
electricity COMPILE NZL-.087s
electricity COMPILE OMN-.127s
electricity COMPILE PAK-.075s
electricity COMPILE PAN-.039s
electricity COMPILE PER-.042s
electricity COMPILE PHL-.041s
electricity COMPILE POL-.04s
electricity COMPILE PRK-.085s
electricity COMPILE PRT-.04s
electricity COMPILE PRY-.088s
electricity COMPILE QAT-.119s
electricity COMPILE ROU-.081s
electricity COMPILE RUS-.108s
electricity COMPILE SAU-.082s
electricity COMPILE SDN-.084s
electricity COMPILE SEN-.083s
electricity COMPILE SGP-.111s
electricity COMPILE SLV-.039s
electricity COMPILE SRB-.108s
electricity COMPILE SUR-.113s
electricity COMPILE SVK-.108s
electricity COMPILE SVN-.088s
electricity COMPILE SWE-.072s
electricity COMPILE SYR-.08s
electricity COMPILE TGO-.082s
electricity COMPILE THA-.089s
electricity COMPILE TJK-.107s
electricity COMPILE TKM-.063s
electricity COMPILE TTO-.077s
electricity COMPILE TUN-.045s
electricity COMPILE TUR-.087s
electricity COMPILE TWN-.086s
electricity COMPILE TZA-.083s
electricity COMPILE UKR-.112s
electricity COMPILE URY-.085s
electricity COMPILE USA-.119s
electricity COMPILE UZB-.11s
electricity COMPILE VEN-.135s
electricity COMPILE VNM-.08s
electricity COMPILE XKO-.082s
electricity COMPILE YEM-.079s
electricity COMPILE YUGOND-.041s
electricity COMPILE ZAF-.078s
electricity COMPILE ZMB-.079s
electricity COMPILE ZWE-.105s

. 
. use `grey_nine_issues_file', clear

. 
. // clean up shop
. drop issue_code year_start year_end flag_drop grey

. sort flow product country year flow

. 
end of do-file

. 
. //rename COMPILE -- OTHERIND and make sure only have desired flows and produc
> ts for spec
. // OTHERIND = TOTOTHER + TOTIND
. 
. replace flow = "OTHERIND" if flow == "COMPILE"
(9,016 real changes made)

. keep if inlist(flow, "OTHERIND")
(0 observations deleted)

. keep if inlist(product, "other_energy", "electricity")
(0 observations deleted)

. 
. *************************************************************************
. * Step 2) Match Product Specific Climate Data with respective product
. *************************************************************************
. 
. * Reference climate data construction for information about the issues causin
> g different climate data for different products
. 
. forval p=1/4 {
  2.         replace temp`p'_GMFD = temp`p'_other_GMFD if inlist(product,"other
> _energy")
  3. }
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)

. 
. forval q=1/2 {
  2.         replace precip`q'_GMFD = precip`q'_other_GMFD if product=="other_e
> nergy"
  3.         replace polyAbove`q'_GMFD = polyAbove`q'_other_GMFD if inlist(prod
> uct,"other_energy")
  4.         replace polyBelow`q'_GMFD = polyBelow`q'_other_GMFD if inlist(prod
> uct,"other_energy")
  5. }
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)

. 
. replace cdd20_TINV_GMFD = cdd20_other_TINV_GMFD if inlist(product,"other_ener
> gy")
(40 real changes made)

. replace hdd20_TINV_GMFD = hdd20_other_TINV_GMFD if inlist(product,"other_ener
> gy")
(40 real changes made)

. 
. 
. *****************************************************************************
> ******************************************
. * Step 3) Identify income spline knot location by constructing two income gro
> ups for each product
. *****************************************************************************
> ******************************************
. 
. //Part A) Prepare Dataset for Income group construction by ensuring only data
>  included in regression remains in dataset
. 
.         //Keep only observations we actually have data for
.         drop if load_pc == . | lgdppc_MA15 == . | temp1_GMFD == .
(313 observations deleted)

. 
. 
.         // zero energy consumption for electricity or other energy for TOTOTH
> ER and TOTIND deamed infeasible -> drop observations
.         drop if load_pc == 0
(402 observations deleted)

. 
.         //generate reporting regimes
.         egen region_i = group(country FEtag flow product)

.         sort region_i year

.         tset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
.         //Organize variables
.         order country year flow product load_pc lgdppc_MA15 pop FEtag *GMFD*

. 
. //Part B) Construct Income Groups
. 
.         preserve

. 
.                 duplicates drop country year, force

Duplicates in terms of country year

(3,623 observations deleted)

. 
.                 // create income and climate quantiles 
.                 qui egen gpid=xtile(lgdppc_MA15), nq(10)

.                 pause

.                 qui egen tpid=xtile(cdd20_TINV_GMFD), nq(3)

.                 qui egen tgpid=xtile(lgdppc_MA15), nq(3)

. 
.                 **reversing the order of tpid to put hot ones on top**
.                 qui replace tpid = 4 - tpid

.                         
.                 //Generate large income groups (knot location varies by produ
> ct)
. 
.                 qui generate largegpid_electricity =.

.                 qui replace largegpid_electricity = 1 if (gpid>=1) & (gpid<=6
> ) 

.                 qui replace largegpid_electricity = 2 if gpid==7 | gpid==8 

.                 qui replace largegpid_electricity = 2 if gpid==9 | gpid==10 

.                                                 
.                 qui generate largegpid_other_energy =.

.                 qui replace largegpid_other_energy = 1 if (gpid >= 1) & (gpid
>  <= 2) 

.                 qui replace largegpid_other_energy = 2 if (gpid >= 3) & (gpid
>  <= 6) 

.                 qui replace largegpid_other_energy = 2 if (gpid >= 7) & (gpid
>  <= 10)                            

. 
.                 ** center the year around 1971
.                 gen cyear = year - 1971

. 
.                 ** generate year variable for piecewise linear time effect in
> teraction
.                 gen pyear = year - 1991 if year >= 1991
(2,055 missing values generated)

.                 replace pyear = 1991 - year if year < 1991
(2,055 real changes made)

. 
.                 ** generate year variable for post1980 linear time effect int
> eraction
.                 gen p80yr = year - 1980 if year >= 1980
(909 missing values generated)

.                 replace p80yr = 1980 - year if year < 1980
(909 real changes made)

. 
.                 //keep only necessary vars
.                 keep cdd20_TINV_GMFD hdd20_TINV_GMFD country *year p80yr lgdp
> pc_MA15 gpid tpid tgpid large*

. 
.                 // generate average variables for climate and income quantile
> s for plotting
.                 //average CDD in each cell
.                 qui egen avgCDD_tpid=mean(cdd20_TINV_GMFD), by(tpid) 

.                 //average HDD in each cell
.                 qui egen avgHDD_tpid=mean(hdd20_TINV_GMFD), by(tpid) 

.                 //average lgdppc in each cell
.                 qui egen avgInc_tgpid=mean(lgdppc_MA15), by(tgpid) 

.                 //average lgdppc in each climate decile
.                 qui egen avgInc_tpid=mean(lgdppc_MA15), by(tpid) 

. 
.                 qui egen maxInc_gpid=max(lgdppc_MA15), by(gpid) //max lgdppc 
> in each cell - this is needed for configs

.                 
.                 //max lggdppc for each large income group for each cell
.                 foreach var in "other_energy" "electricity" {
  2.                         qui egen maxInc_largegpid_`var'=max(lgdppc_MA15), 
> by(largegpid_`var') 
  3.                 }

. 
. 
.                 local break_data "$DATA/regression/break_data_`model'.dta"

.                 save "`break_data'", replace
file /Users/ruixueli/Downloads/energy_data_release/DATA/regression/break_data_T
> INV_clim.dta saved

. 
.         restore

. 
. *****************************************************************************
> ******************************************
. *Step 4) Perform Final Cleaning Steps
. *****************************************************************************
> ******************************************
. 
. //Merge in income group definitions
. merge m:1 country year using `break_data', nogen keep(3)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                             8,301  
    -----------------------------------------

. sort gpid

. 
. //Generate product specific large income groups
. gen largegpid = largegpid_electricity if product == "electricity"
(3,809 missing values generated)

. replace largegpid = largegpid_other_energy if product == "other_energy"
(3,809 real changes made)

. drop largegpid_electricity largegpid_other_energy

. 
. //Generate dummy variable by income decile and group 
. tab gpid, gen(ind)

       gpid |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        859       10.35       10.35
          2 |        906       10.91       21.26
          3 |        898       10.82       32.08
          4 |        905       10.90       42.98
          5 |        857       10.32       53.31
          6 |        866       10.43       63.74
          7 |        778        9.37       73.11
          8 |        766        9.23       82.34
          9 |        704        8.48       90.82
         10 |        762        9.18      100.00
------------+-----------------------------------
      Total |      8,301      100.00

. tab largegpid, gen(largeind)

  largegpid |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      3,587       43.21       43.21
          2 |      4,714       56.79      100.00
------------+-----------------------------------
      Total |      8,301      100.00

. 
. *********************************************************
. // generate dummy variable with value = 1 indicating 
. // a country being in high income group for all years
. // for coldsidep80highinc regression
. 
. // generate indicator for electricity observations with high income
. gen largeind_electricity = 1 if largeind2 == 1 & product == "electricity"
(6,556 missing values generated)

. replace largeind_electricity = 0 if largeind_electricity == .
(6,556 real changes made)

. // generate the number of observations and high income nobs for each country 
. bysort country: egen nobs_electricity = total(product == "electricity")

. bysort country: egen nobs_largeind = total(largeind_electricity == 1)

. bysort country: egen first_year = min(year)

. bysort country: egen last_year = max(year)

. 
. // generate indicator for a country having as many high inc observations
. // as electricity observations, while also spanning the whole period
. gen largeind_allyears = (nobs_electricity == nobs_largeind & first_year == 19
> 71 & last_year == 2010 & product == "electricity")

. gen largeind_notallyears = 1 - largeind_allyears

. 
. *********************************************************
. 
. //Generate sector and fuel dummies
. 
. * 1 = electricity, 2 = other_energy
. tab product, gen(indp)

           product |      Freq.     Percent        Cum.
-------------------+-----------------------------------
       electricity |      4,492       54.11       54.11
      other_energy |      3,809       45.89      100.00
-------------------+-----------------------------------
             Total |      8,301      100.00

. egen product_i = group(product)

. 
. * only 1 sector, so this step exists due to path dependency
. tab flow, gen(indf)

               flow |      Freq.     Percent        Cum.
--------------------+-----------------------------------
           OTHERIND |      8,301      100.00      100.00
--------------------+-----------------------------------
              Total |      8,301      100.00

. egen flow_i = group(flow)

. 
. 
. * generate time period dummies for interaction
. ** for piecewise linear interaction
. gen indt = 1 if year >= 1991
(3,562 missing values generated)

. replace indt = 0 if year < 1991
(3,562 real changes made)

. 
. ** for post 1980 linear interaction
. gen indp80 = 1 if year >= 1980
(1,555 missing values generated)

. replace indp80 = 0 if year < 1980
(1,555 real changes made)

. 
. ** for decades interaction
. gen indd = 0

. replace indd = 1 if year >= 1980
(6,746 real changes made)

. replace indd = 2 if year >= 1990
(4,957 real changes made)

. replace indd = 3 if year >= 2000
(2,700 real changes made)

. 
. 
. 
. // Classify world into 13 regions based on UN World Regions Classifications (
> for fixed effect... reference Temperature Response of Energy Consumption Sect
> ion )
. 
. **Clean the region data**
. preserve

. insheet using "$DATA/reference/UNSD — Methodology.csv", comma names clear
(15 vars, 249 obs)

. generate subregionid=.
(249 missing values generated)

. replace subregionid=1 if regionname=="Oceania" 
(29 real changes made)

. replace subregionid=2 if subregionname=="Northern America" 
(5 real changes made)

. replace subregionid=3 if subregionname=="Northern Europe" 
(17 real changes made)

. replace subregionid=4 if subregionname=="Southern Europe"
(16 real changes made)

. replace subregionid=5 if subregionname=="Western Europe"
(9 real changes made)

. replace subregionid=6 if subregionname=="Eastern Europe" | subregionname=="Ce
> ntral Asia" 
(15 real changes made)

. replace subregionid=7 if subregionname=="Eastern Asia" 
(7 real changes made)

. replace subregionid=8 if subregionname=="South-eastern Asia" 
(11 real changes made)

. replace subregionid=9 if intermediateregionname=="Caribbean" | intermediatere
> gionname=="Central America"
(36 real changes made)

. replace subregionid=10 if intermediateregionname=="South America"
(16 real changes made)

. replace subregionid=11 if subregionname=="Sub-Saharan Africa" 
(53 real changes made)

. replace subregionid=12 if subregionname=="Northern Africa" | subregionname=="
> Western Asia" 
(25 real changes made)

. replace subregionid=13 if subregionname=="Southern Asia"
(9 real changes made)

. drop if subregionid==.
(1 observation deleted)

. keep isoalpha3code subregionid subregionname

. replace subregionname="Oceania" if subregionid==1
(29 real changes made)

. replace subregionname="Caribbean and Central America" if subregionid==9
(36 real changes made)

. replace subregionname="South America" if subregionid==10
(16 real changes made)

. replace subregionname="Central Asia and Eastern Europe" if subregionid==6
(15 real changes made)

. replace subregionname="Western Asia and Northern Africa" if subregionid==12
variable subregionname was str31 now str32
(25 real changes made)

. rename isoalpha3code country 

. tempfile subregion

. save `subregion', replace
(note: file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000003 no
> t found)
file /var/folders/v3/5905wccj42z360z1jjg1lc5c0000gn/T//St71404.000003 saved

. restore

. 
. merge m:1 country using `subregion'

    Result                           # of obs.
    -----------------------------------------
    not matched                           290
        from master                       178  (_merge==1)
        from using                        112  (_merge==2)

    matched                             8,123  (_merge==3)
    -----------------------------------------

. keep if _merge!=2
(112 observations deleted)

. drop _merge

. 
. replace subregionid = 6 if country=="FSUND"
(38 real changes made)

. replace subregionid = 4 if country=="YUGOND"
(38 real changes made)

. replace subregionid = 7 if country=="TWN"
(80 real changes made)

. replace subregionid = 4 if country=="XKO"
(22 real changes made)

. replace subregionname = "Central Asia and Eastern Europe" if country == "FSUN
> D"
(38 real changes made)

. replace subregionname = "Southern Europe" if country == "YUGOND"
(38 real changes made)

. replace subregionname = "Eastern Asia" if country == "TWN"
(80 real changes made)

. replace subregionname = "Southern Europe" if country=="XKO"
(22 real changes made)

. 
. *****************************************************************************
> ******************************************
. * Step 5) Construct First Differenced Interacted Variables
. *****************************************************************************
> ******************************************
. do "$root/0_make_dataset/merged/2_construct_FD_interacted_variables.do"

. /*
> 
> Purpose: Transform cleaned data to be regression ready
> - construct decade variable for the last decade robustness check
> - construct income spline variable
> - First Difference and interact terms
> 
> */
. 
. // set time
. sort region_i year

. xtset region_i year
       panel variable:  region_i (unbalanced)
        time variable:  year, 1971 to 2010, but with gaps
                delta:  1 unit

. 
. ** Generate Decadal dummies**
. qui gen decade=.

. qui replace decade=1 if (year<=1980 & year>=1971)

. qui replace decade=2 if (year<=1990 & year>=1981)

. qui replace decade=3 if (year<=2000 & year>=1991)

. qui replace decade=4 if (year<=2012 & year>=2001)

. qui tab decade, gen(decind)

. 
. 
. ** Generate income spline variable **
. 
. gen dc1_lgdppc_MA15 = .
(8,301 missing values generated)

. 
. foreach product in "other_energy" "electricity" {
  2.         summ lgdppc_MA15 if largegpid == 1 & product == "`product'"
  3.         replace dc1_lgdppc_MA15 = lgdppc_MA15 - `r(max)' if product == "`p
> roduct'"
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 lgdppc_MA15 |        840     7.16625    .4870434    5.74169   7.712954
(3,809 real changes made)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 lgdppc_MA15 |      2,747    8.015366    .7355316    5.74169    9.08701
(4,492 real changes made)

. 
. ** First difference energy load pc
. 
. gen FD_load_pc = load_pc - L1.load_pc
(581 missing values generated)

. 
. ** First difference income group and income x income group 
.         
. forval lg=1/2 {
  2.         qui gen FD_largeind`lg' = largeind`lg' - L1.largeind`lg'
  3.         qui gen double FD_I`lg'lgdppc_MA15 = ( lgdppc_MA15 * largeind`lg' 
> ) - ( L1.lgdppc_MA15 * L1.largeind`lg' )
  4. }

. 
. ** First Difference precip **
. 
. forval i=1/2 {
  2.         qui gen double FD_precip`i'_GMFD = precip`i'_GMFD - L1.precip`i'_G
> MFD
  3. }

. 
. ** First Difference temp, temp x year, temp x year^2, and temp x decade **
. 
. // generate a year variable centered around 1971
. 
. forval i=1/4 {
  2.         
.         // temp
.         qui gen double FD_temp`i'_GMFD = temp`i'_GMFD - L1.temp`i'_GMFD
  3.         qui gen double FD_polyBelow`i'_GMFD = polyBelow`i'_GMFD - L1.polyB
> elow`i'_GMFD
  4.         
.         foreach yr in year cyear pyear p80yr {
  5.                 // temp x year
.                 qui gen double FD_`yr'temp`i'_GMFD = (`yr' * temp`i'_GMFD) - 
> (L1.`yr' * L1.temp`i'_GMFD)
  6.                 
.                 // temp x year^2
.                 qui gen double FD_`yr'2temp`i'_GMFD = (`yr' * `yr' * temp`i'_
> GMFD) - (L1.`yr' * L1.`yr' * L1.temp`i'_GMFD)
  7.         }
  8.         // temp x decade
.         forval dg=1/2 {
  9.                 qui gen double FD_D`dg'temp`i'_GMFD = (decind`dg' * temp`i
> '_GMFD) - (L1.decind`dg' * L1.temp`i'_GMFD)
 10.         }
 11.                 
.         // polyBelow x year post 1980 for coldsidep80 interaction
.         qui gen double FD_p80yr_polyBelow`i'_GMFD = (p80yr * polyBelow`i'_GMF
> D) - (L1.p80yr * L1.polyBelow`i'_GMFD)
 12.                 
.         // polyBelow x year  for coldside interaction
.         qui gen double FD_year_polyBelow`i'_GMFD = (year * polyBelow`i'_GMFD)
>  - (L1.year * L1.polyBelow`i'_GMFD)
 13. 
.         // polyAbove x year post 1980 for twosidedp80 interaction
.         qui gen double FD_p80yr_polyAbove`i'_GMFD = (p80yr * polyAbove`i'_GMF
> D) - (L1.p80yr * L1.polyAbove`i'_GMFD)
 14. 
. }

. 
. 
. ** First difference temp x income decile
. 
. forval lg = 1/10 {
  2.         forval i=1/4 {
  3.                 gen double FD_I`lg'temp`i'_GMFD = ( temp`i'_GMFD * ind`lg'
>  ) - ( L1.temp`i'_GMFD * L1.ind`lg' )
  4.         }
  5. }
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)
(581 missing values generated)

. 
. ** First difference temp x year x income spline 
. 
. forval lg=1/2 {
  2.         forval i=1/4 {
  3. 
.                 foreach yr in year cyear pyear p80yr {
  4. 
.                         qui gen double FD_dc1_lgdppc_MA15`yr'I`lg'temp`i' = /
> //
>                         ( dc1_lgdppc_MA15 * temp`i'_GMFD * largeind`lg' * `yr
> ' ) ///
>                         - ( L1.dc1_lgdppc_MA15 * L1.temp`i'_GMFD * L1.largein
> d`lg' * L1.`yr' )
  5.                 
.                 }
  6.                 // temp(polyBelow) x year(post 1980) x income spline terms
>  for coldsidep80 interaction
.                 qui gen double FD_lgdppc_MA15p80yrI`lg'polyBelow`i' = ///
>                 ( dc1_lgdppc_MA15 * polyBelow`i'_GMFD * largeind`lg' * p80yr 
> ) ///
>                 - ( L1.dc1_lgdppc_MA15 * L1.polyBelow`i'_GMFD * L1.largeind`l
> g' * L1.p80yr )
  7. 
.                 // temp(polyBelow) x year x income spline terms for coldside 
> interaction
.                 qui gen double FD_lgdppc_MA15yearI`lg'polyBelow`i' = ///
>                 ( dc1_lgdppc_MA15 * polyBelow`i'_GMFD * largeind`lg' * year )
>  ///
>                 - ( L1.dc1_lgdppc_MA15 * L1.polyBelow`i'_GMFD * L1.largeind`l
> g' * L1.year )
  8. 
.                 // temp(polyAbove) x year(post 1980) x income spline terms fo
> r twosidedp80 interaction
.                 qui gen double FD_lgdppc_MA15p80yrI`lg'polyAbove`i' = ///
>                 ( dc1_lgdppc_MA15 * polyAbove`i'_GMFD * largeind`lg' * p80yr 
> ) ///
>                 - ( L1.dc1_lgdppc_MA15 * L1.polyAbove`i'_GMFD * L1.largeind`l
> g' * L1.p80yr )
  9.         
.         }
 10. }               

.                 
. ** First difference temp x year^2 x income spline 
. 
. forval lg=1/2 {
  2.         forval i=1/4 {
  3.                 foreach yr in year cyear pyear p80yr {
  4.                         qui gen double FD_dc1_lgdppc_MA15`yr'2I`lg'temp`i'
>  = ///
>                         ( dc1_lgdppc_MA15 * temp`i'_GMFD * largeind`lg' * `yr
> ' * `yr' ) ///
>                         - ( L1.dc1_lgdppc_MA15 * L1.temp`i'_GMFD * L1.largein
> d`lg' * L1.`yr' * L1.`yr' )
  5.                 }
  6.         }
  7. }               

. 
. 
. ** First difference income spline x temp
. 
. forval lg=1/2 {
  2.         forval i=1/4 {
  3.                 qui gen double FD_dc1_lgdppc_MA15I`lg'temp`i' = ///
>                 ( dc1_lgdppc_MA15 * temp`i'_GMFD * largeind`lg' ) - ///
>                 ( L1.dc1_lgdppc_MA15 * L1.temp`i'_GMFD * L1.largeind`lg' )
  4.         }
  5. }

. 
. ** First difference income spline x temp (polyBelow)
. 
. forval lg=1/2 {
  2.         forval i=1/4 {
  3.                 qui gen double FD_dc1_lgdppc_MA15I`lg'polyBelow`i' = ///
>                 ( dc1_lgdppc_MA15 * polyBelow`i'_GMFD * largeind`lg' ) - ///
>                 ( L1.dc1_lgdppc_MA15 * L1.polyBelow`i'_GMFD * L1.largeind`lg'
>  )
  4.         }
  5. }

. 
. 
. 
. ** First difference dd20 x polyBreak ** 
. 
. forval i=1/4 {
  2.         
.         qui gen double FD_cdd20_TINVtemp`i'_GMFD_old = ///
>                         ( cdd20_TINV_GMFD * polyAbove`i'_GMFD ) - ///
>                         ( cdd20_TINV_GMFD * L1.polyAbove`i'_GMFD )
  3.         
.         qui gen double FD_hdd20_TINVtemp`i'_GMFD_old = ///
>                         ( hdd20_TINV_GMFD * polyBelow`i'_GMFD ) - ///
>                         ( hdd20_TINV_GMFD * L1.polyBelow`i'_GMFD )
  4. }

. 
. 
. ** First difference dd20 x polyBreak at pixel level ** 
. 
. forval i=1/4 {
  2.         
.         qui gen double FD_cdd20_TINVtemp`i'_GMFD = ///
>                         polyAbove`i'_x_cdd_GMFD - L1.polyAbove`i'_x_cdd_GMFD
  3.         
.         qui gen double FD_hdd20_TINVtemp`i'_GMFD = ///
>                         polyBelow`i'_x_hdd_GMFD - L1.polyBelow`i'_x_hdd_GMFD
  4. }

. 
. 
. 
. 
. 
end of do-file

. save "$DATA/regression/GMFD_`model'_regsort.dta", replace
file /Users/ruixueli/Downloads/energy_data_release/DATA/regression/GMFD_TINV_cl
> im_regsort.dta saved

. 
. log close _all
      name:  <unnamed>
       log:  /Users/ruixueli/Downloads/energy_data_release/LOG/0_make_dataset/2
> _construct_regression_ready_data.log
  log type:  text
 closed on:  18 Oct 2021, 21:00:13
-------------------------------------------------------------------------------

. 
end of do-file
